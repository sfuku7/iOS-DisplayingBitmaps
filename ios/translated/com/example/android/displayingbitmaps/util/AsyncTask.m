//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/Application/src/shared/java//com/example/android/displayingbitmaps/util/AsyncTask.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "android/util/Log.h"
#include "com/example/android/displayingbitmaps/util/AsyncTask.h"
#include "com/example/android/displayingbitmaps/util/Utils.h"
#include "java/lang/Enum.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/InterruptedException.h"
#include "java/lang/Runnable.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/Thread.h"
#include "java/lang/Throwable.h"
#include "java/util/ArrayDeque.h"
#include "java/util/concurrent/BlockingQueue.h"
#include "java/util/concurrent/Callable.h"
#include "java/util/concurrent/CancellationException.h"
#include "java/util/concurrent/ExecutionException.h"
#include "java/util/concurrent/Executor.h"
#include "java/util/concurrent/ExecutorService.h"
#include "java/util/concurrent/Executors.h"
#include "java/util/concurrent/FutureTask.h"
#include "java/util/concurrent/LinkedBlockingQueue.h"
#include "java/util/concurrent/ThreadFactory.h"
#include "java/util/concurrent/ThreadPoolExecutor.h"
#include "java/util/concurrent/TimeUnit.h"
#include "java/util/concurrent/TimeoutException.h"
#include "java/util/concurrent/atomic/AtomicBoolean.h"
#include "java/util/concurrent/atomic/AtomicInteger.h"

@class ComExampleAndroidDisplayingbitmapsUtilAsyncTask_WorkerRunnable;

#pragma clang diagnostic ignored "-Wprotocol"

#define ComExampleAndroidDisplayingbitmapsUtilAsyncTask_CORE_POOL_SIZE 5
#define ComExampleAndroidDisplayingbitmapsUtilAsyncTask_MAXIMUM_POOL_SIZE 128
#define ComExampleAndroidDisplayingbitmapsUtilAsyncTask_KEEP_ALIVE 1
#define ComExampleAndroidDisplayingbitmapsUtilAsyncTask_MESSAGE_POST_RESULT 1
#define ComExampleAndroidDisplayingbitmapsUtilAsyncTask_MESSAGE_POST_PROGRESS 2

@interface ComExampleAndroidDisplayingbitmapsUtilAsyncTask () {
 @public
  id<ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation> mThreadOperation_;
  ComExampleAndroidDisplayingbitmapsUtilAsyncTask_WorkerRunnable *mWorker_;
  JavaUtilConcurrentFutureTask *mFuture_;
  volatile_id mStatus_;
  JavaUtilConcurrentAtomicAtomicBoolean *mCancelled_;
  JavaUtilConcurrentAtomicAtomicBoolean *mTaskInvoked_;
}

- (void)postResultIfNotInvokedWithId:(id)result;

- (id)postResultWithId:(id)result;

@end

J2OBJC_FIELD_SETTER(ComExampleAndroidDisplayingbitmapsUtilAsyncTask, mThreadOperation_, id<ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation>)
J2OBJC_FIELD_SETTER(ComExampleAndroidDisplayingbitmapsUtilAsyncTask, mWorker_, ComExampleAndroidDisplayingbitmapsUtilAsyncTask_WorkerRunnable *)
J2OBJC_FIELD_SETTER(ComExampleAndroidDisplayingbitmapsUtilAsyncTask, mFuture_, JavaUtilConcurrentFutureTask *)
J2OBJC_VOLATILE_FIELD_SETTER(ComExampleAndroidDisplayingbitmapsUtilAsyncTask, mStatus_, ComExampleAndroidDisplayingbitmapsUtilAsyncTask_StatusEnum *)
J2OBJC_FIELD_SETTER(ComExampleAndroidDisplayingbitmapsUtilAsyncTask, mCancelled_, JavaUtilConcurrentAtomicAtomicBoolean *)
J2OBJC_FIELD_SETTER(ComExampleAndroidDisplayingbitmapsUtilAsyncTask, mTaskInvoked_, JavaUtilConcurrentAtomicAtomicBoolean *)

static NSString *ComExampleAndroidDisplayingbitmapsUtilAsyncTask_LOG_TAG_ = @"AsyncTask";
J2OBJC_STATIC_FIELD_GETTER(ComExampleAndroidDisplayingbitmapsUtilAsyncTask, LOG_TAG_, NSString *)

J2OBJC_STATIC_FIELD_GETTER(ComExampleAndroidDisplayingbitmapsUtilAsyncTask, CORE_POOL_SIZE, jint)

J2OBJC_STATIC_FIELD_GETTER(ComExampleAndroidDisplayingbitmapsUtilAsyncTask, MAXIMUM_POOL_SIZE, jint)

J2OBJC_STATIC_FIELD_GETTER(ComExampleAndroidDisplayingbitmapsUtilAsyncTask, KEEP_ALIVE, jint)

static id<JavaUtilConcurrentThreadFactory> ComExampleAndroidDisplayingbitmapsUtilAsyncTask_sThreadFactory_;
J2OBJC_STATIC_FIELD_GETTER(ComExampleAndroidDisplayingbitmapsUtilAsyncTask, sThreadFactory_, id<JavaUtilConcurrentThreadFactory>)

static id<JavaUtilConcurrentBlockingQueue> ComExampleAndroidDisplayingbitmapsUtilAsyncTask_sPoolWorkQueue_;
J2OBJC_STATIC_FIELD_GETTER(ComExampleAndroidDisplayingbitmapsUtilAsyncTask, sPoolWorkQueue_, id<JavaUtilConcurrentBlockingQueue>)

J2OBJC_STATIC_FIELD_GETTER(ComExampleAndroidDisplayingbitmapsUtilAsyncTask, MESSAGE_POST_RESULT, jint)

J2OBJC_STATIC_FIELD_GETTER(ComExampleAndroidDisplayingbitmapsUtilAsyncTask, MESSAGE_POST_PROGRESS, jint)

static volatile_id ComExampleAndroidDisplayingbitmapsUtilAsyncTask_sDefaultExecutor_;
J2OBJC_STATIC_VOLATILE_OBJ_FIELD_GETTER(ComExampleAndroidDisplayingbitmapsUtilAsyncTask, sDefaultExecutor_, id<JavaUtilConcurrentExecutor>)
J2OBJC_STATIC_VOLATILE_OBJ_FIELD_SETTER(ComExampleAndroidDisplayingbitmapsUtilAsyncTask, sDefaultExecutor_, id<JavaUtilConcurrentExecutor>)

__attribute__((unused)) static void ComExampleAndroidDisplayingbitmapsUtilAsyncTask_postResultIfNotInvokedWithId_(ComExampleAndroidDisplayingbitmapsUtilAsyncTask *self, id result);

__attribute__((unused)) static id ComExampleAndroidDisplayingbitmapsUtilAsyncTask_postResultWithId_(ComExampleAndroidDisplayingbitmapsUtilAsyncTask *self, id result);

__attribute__((unused)) static jboolean ComExampleAndroidDisplayingbitmapsUtilAsyncTask_isCancelled(ComExampleAndroidDisplayingbitmapsUtilAsyncTask *self);

__attribute__((unused)) static ComExampleAndroidDisplayingbitmapsUtilAsyncTask *ComExampleAndroidDisplayingbitmapsUtilAsyncTask_executeOnExecutorWithJavaUtilConcurrentExecutor_withNSObjectArray_(ComExampleAndroidDisplayingbitmapsUtilAsyncTask *self, id<JavaUtilConcurrentExecutor> exec, IOSObjectArray *params);

@interface ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor : NSObject < JavaUtilConcurrentExecutor > {
 @public
  JavaUtilArrayDeque *mTasks_;
  id<JavaLangRunnable> mActive_;
}

- (void)executeWithJavaLangRunnable:(id<JavaLangRunnable>)r;

- (void)scheduleNext;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor)

J2OBJC_FIELD_SETTER(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor, mTasks_, JavaUtilArrayDeque *)
J2OBJC_FIELD_SETTER(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor, mActive_, id<JavaLangRunnable>)

__attribute__((unused)) static void ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor_init(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor *self);

__attribute__((unused)) static ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor *new_ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor)

@interface ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor_$1 : NSObject < JavaLangRunnable > {
 @public
  ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor *this$0_;
  id<JavaLangRunnable> val$r_;
}

- (void)run;

- (instancetype)initWithComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor:(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor *)outer$
                                                                  withJavaLangRunnable:(id<JavaLangRunnable>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor_$1)

J2OBJC_FIELD_SETTER(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor_$1, this$0_, ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor *)
J2OBJC_FIELD_SETTER(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor_$1, val$r_, id<JavaLangRunnable>)

__attribute__((unused)) static void ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor_$1_initWithComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor_withJavaLangRunnable_(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor_$1 *self, ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor *outer$, id<JavaLangRunnable> capture$0);

__attribute__((unused)) static ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor_$1 *new_ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor_$1_initWithComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor_withJavaLangRunnable_(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor *outer$, id<JavaLangRunnable> capture$0) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor_$1)

__attribute__((unused)) static void ComExampleAndroidDisplayingbitmapsUtilAsyncTask_StatusEnum_initWithNSString_withInt_(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_StatusEnum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static ComExampleAndroidDisplayingbitmapsUtilAsyncTask_StatusEnum *new_ComExampleAndroidDisplayingbitmapsUtilAsyncTask_StatusEnum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@interface ComExampleAndroidDisplayingbitmapsUtilAsyncTask_WorkerRunnable : NSObject < JavaUtilConcurrentCallable > {
 @public
  IOSObjectArray *mParams_;
}

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_WorkerRunnable)

J2OBJC_FIELD_SETTER(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_WorkerRunnable, mParams_, IOSObjectArray *)

__attribute__((unused)) static void ComExampleAndroidDisplayingbitmapsUtilAsyncTask_WorkerRunnable_init(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_WorkerRunnable *self);

J2OBJC_TYPE_LITERAL_HEADER(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_WorkerRunnable)

@interface ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation : NSObject

@end

__attribute__((unused)) static void ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation_PriorityEnum_initWithNSString_withInt_(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation_PriorityEnum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation_PriorityEnum *new_ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation_PriorityEnum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@interface ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$1 : NSObject < JavaUtilConcurrentThreadFactory > {
 @public
  JavaUtilConcurrentAtomicAtomicInteger *mCount_;
}

- (JavaLangThread *)newThreadWithJavaLangRunnable:(id<JavaLangRunnable>)r OBJC_METHOD_FAMILY_NONE;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$1)

J2OBJC_FIELD_SETTER(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$1, mCount_, JavaUtilConcurrentAtomicAtomicInteger *)

__attribute__((unused)) static void ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$1_init(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$1 *self);

__attribute__((unused)) static ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$1 *new_ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$1_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$1)

@interface ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$2 : ComExampleAndroidDisplayingbitmapsUtilAsyncTask_WorkerRunnable {
 @public
  ComExampleAndroidDisplayingbitmapsUtilAsyncTask *this$0_;
}

- (id)call;

- (instancetype)initWithComExampleAndroidDisplayingbitmapsUtilAsyncTask:(ComExampleAndroidDisplayingbitmapsUtilAsyncTask *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$2)

J2OBJC_FIELD_SETTER(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$2, this$0_, ComExampleAndroidDisplayingbitmapsUtilAsyncTask *)

__attribute__((unused)) static void ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$2_initWithComExampleAndroidDisplayingbitmapsUtilAsyncTask_(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$2 *self, ComExampleAndroidDisplayingbitmapsUtilAsyncTask *outer$);

__attribute__((unused)) static ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$2 *new_ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$2_initWithComExampleAndroidDisplayingbitmapsUtilAsyncTask_(ComExampleAndroidDisplayingbitmapsUtilAsyncTask *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$2)

@interface ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$3 : JavaUtilConcurrentFutureTask {
 @public
  ComExampleAndroidDisplayingbitmapsUtilAsyncTask *this$0_;
}

- (void)done;

- (instancetype)initWithComExampleAndroidDisplayingbitmapsUtilAsyncTask:(ComExampleAndroidDisplayingbitmapsUtilAsyncTask *)outer$
                                         withJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$3)

J2OBJC_FIELD_SETTER(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$3, this$0_, ComExampleAndroidDisplayingbitmapsUtilAsyncTask *)

__attribute__((unused)) static void ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$3_initWithComExampleAndroidDisplayingbitmapsUtilAsyncTask_withJavaUtilConcurrentCallable_(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$3 *self, ComExampleAndroidDisplayingbitmapsUtilAsyncTask *outer$, id<JavaUtilConcurrentCallable> arg$0);

__attribute__((unused)) static ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$3 *new_ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$3_initWithComExampleAndroidDisplayingbitmapsUtilAsyncTask_withJavaUtilConcurrentCallable_(ComExampleAndroidDisplayingbitmapsUtilAsyncTask *outer$, id<JavaUtilConcurrentCallable> arg$0) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$3)

J2OBJC_INITIALIZED_DEFN(ComExampleAndroidDisplayingbitmapsUtilAsyncTask)

id<JavaUtilConcurrentExecutor> ComExampleAndroidDisplayingbitmapsUtilAsyncTask_THREAD_POOL_EXECUTOR_;
id<JavaUtilConcurrentExecutor> ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SERIAL_EXECUTOR_;
id<JavaUtilConcurrentExecutor> ComExampleAndroidDisplayingbitmapsUtilAsyncTask_DUAL_THREAD_EXECUTOR_;

@implementation ComExampleAndroidDisplayingbitmapsUtilAsyncTask

+ (void)init__ {
  ComExampleAndroidDisplayingbitmapsUtilAsyncTask_init__();
}

+ (void)setDefaultExecutorWithJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)exec {
  ComExampleAndroidDisplayingbitmapsUtilAsyncTask_setDefaultExecutorWithJavaUtilConcurrentExecutor_(exec);
}

- (instancetype)initWithComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation:(id<ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation>)accessor {
  ComExampleAndroidDisplayingbitmapsUtilAsyncTask_initWithComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation_(self, accessor);
  return self;
}

- (void)postResultIfNotInvokedWithId:(id)result {
  ComExampleAndroidDisplayingbitmapsUtilAsyncTask_postResultIfNotInvokedWithId_(self, result);
}

- (id)postResultWithId:(id)result {
  return ComExampleAndroidDisplayingbitmapsUtilAsyncTask_postResultWithId_(self, result);
}

- (ComExampleAndroidDisplayingbitmapsUtilAsyncTask_StatusEnum *)getStatus {
  return JreLoadVolatileId(&mStatus_);
}

- (id)doInBackgroundWithNSObjectArray:(IOSObjectArray *)params {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)onPreExecute {
}

- (void)onPostExecuteWithId:(id)result {
}

- (void)onProgressUpdateWithNSObjectArray:(IOSObjectArray *)values {
}

- (void)onCancelledWithId:(id)result {
  [self onCancelled];
}

- (void)onCancelled {
}

- (jboolean)isCancelled {
  return ComExampleAndroidDisplayingbitmapsUtilAsyncTask_isCancelled(self);
}

- (jboolean)cancelWithBoolean:(jboolean)mayInterruptIfRunning {
  [((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(mCancelled_)) setWithBoolean:true];
  return [((JavaUtilConcurrentFutureTask *) nil_chk(mFuture_)) cancelWithBoolean:mayInterruptIfRunning];
}

- (id)get {
  return [((JavaUtilConcurrentFutureTask *) nil_chk(mFuture_)) get];
}

- (id)getWithLong:(jlong)timeout
withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit {
  return [((JavaUtilConcurrentFutureTask *) nil_chk(mFuture_)) getWithLong:timeout withJavaUtilConcurrentTimeUnitEnum:unit];
}

- (ComExampleAndroidDisplayingbitmapsUtilAsyncTask *)executeWithNSObjectArray:(IOSObjectArray *)params {
  return ComExampleAndroidDisplayingbitmapsUtilAsyncTask_executeOnExecutorWithJavaUtilConcurrentExecutor_withNSObjectArray_(self, JreLoadVolatileId(&ComExampleAndroidDisplayingbitmapsUtilAsyncTask_sDefaultExecutor_), params);
}

- (ComExampleAndroidDisplayingbitmapsUtilAsyncTask *)executeOnExecutorWithJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)exec
                                                                                   withNSObjectArray:(IOSObjectArray *)params {
  return ComExampleAndroidDisplayingbitmapsUtilAsyncTask_executeOnExecutorWithJavaUtilConcurrentExecutor_withNSObjectArray_(self, exec, params);
}

+ (void)executeWithJavaLangRunnable:(id<JavaLangRunnable>)runnable {
  ComExampleAndroidDisplayingbitmapsUtilAsyncTask_executeWithJavaLangRunnable_(runnable);
}

- (void)publishProgressWithNSObjectArray:(IOSObjectArray *)values {
  if (!ComExampleAndroidDisplayingbitmapsUtilAsyncTask_isCancelled(self)) {
    [((id<ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation>) nil_chk(mThreadOperation_)) publishProgressWithComExampleAndroidDisplayingbitmapsUtilAsyncTask:self withNSObjectArray:values];
  }
}

- (void)finishWithId:(id)result {
  if (ComExampleAndroidDisplayingbitmapsUtilAsyncTask_isCancelled(self)) {
    [self onCancelledWithId:result];
  }
  else {
    [self onPostExecuteWithId:result];
  }
  JreVolatileStrongAssign(&mStatus_, JreLoadStatic(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_StatusEnum, FINISHED));
}

- (void)dealloc {
  RELEASE_(mThreadOperation_);
  RELEASE_(mWorker_);
  RELEASE_(mFuture_);
  JreReleaseVolatile(&mStatus_);
  RELEASE_(mCancelled_);
  RELEASE_(mTaskInvoked_);
  [super dealloc];
}

- (void)__javaClone {
  [super __javaClone];
  JreRetainVolatile(&mStatus_);
}

+ (void)initialize {
  if (self == [ComExampleAndroidDisplayingbitmapsUtilAsyncTask class]) {
    JreStrongAssignAndConsume(&ComExampleAndroidDisplayingbitmapsUtilAsyncTask_sThreadFactory_, new_ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$1_init());
    JreStrongAssignAndConsume(&ComExampleAndroidDisplayingbitmapsUtilAsyncTask_sPoolWorkQueue_, new_JavaUtilConcurrentLinkedBlockingQueue_initWithInt_(10));
    JreStrongAssignAndConsume(&ComExampleAndroidDisplayingbitmapsUtilAsyncTask_THREAD_POOL_EXECUTOR_, new_JavaUtilConcurrentThreadPoolExecutor_initWithInt_withInt_withLong_withJavaUtilConcurrentTimeUnitEnum_withJavaUtilConcurrentBlockingQueue_withJavaUtilConcurrentThreadFactory_withJavaUtilConcurrentRejectedExecutionHandler_(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_CORE_POOL_SIZE, ComExampleAndroidDisplayingbitmapsUtilAsyncTask_MAXIMUM_POOL_SIZE, ComExampleAndroidDisplayingbitmapsUtilAsyncTask_KEEP_ALIVE, JreLoadStatic(JavaUtilConcurrentTimeUnitEnum, SECONDS), ComExampleAndroidDisplayingbitmapsUtilAsyncTask_sPoolWorkQueue_, ComExampleAndroidDisplayingbitmapsUtilAsyncTask_sThreadFactory_, [new_JavaUtilConcurrentThreadPoolExecutor_DiscardOldestPolicy_init() autorelease]));
    JreStrongAssign(&ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SERIAL_EXECUTOR_, ComExampleAndroidDisplayingbitmapsUtilUtils_hasHoneycomb() ? [new_ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor_init() autorelease] : ((id) JavaUtilConcurrentExecutors_newSingleThreadExecutorWithJavaUtilConcurrentThreadFactory_(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_sThreadFactory_)));
    JreStrongAssign(&ComExampleAndroidDisplayingbitmapsUtilAsyncTask_DUAL_THREAD_EXECUTOR_, JavaUtilConcurrentExecutors_newFixedThreadPoolWithInt_withJavaUtilConcurrentThreadFactory_(2, ComExampleAndroidDisplayingbitmapsUtilAsyncTask_sThreadFactory_));
    JreVolatileStrongAssign(&ComExampleAndroidDisplayingbitmapsUtilAsyncTask_sDefaultExecutor_, ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SERIAL_EXECUTOR_);
    J2OBJC_SET_INITIALIZED(ComExampleAndroidDisplayingbitmapsUtilAsyncTask)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init__", "init", "V", 0x9, NULL, NULL },
    { "setDefaultExecutorWithJavaUtilConcurrentExecutor:", "setDefaultExecutor", "V", 0x9, NULL, NULL },
    { "initWithComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation:", "AsyncTask", NULL, 0x1, NULL, NULL },
    { "postResultIfNotInvokedWithId:", "postResultIfNotInvoked", "V", 0x2, NULL, "(TResult;)V" },
    { "postResultWithId:", "postResult", "TResult;", 0x2, NULL, "(TResult;)TResult;" },
    { "getStatus", NULL, "Lcom.example.android.displayingbitmaps.util.AsyncTask$Status;", 0x11, NULL, NULL },
    { "doInBackgroundWithNSObjectArray:", "doInBackground", "TResult;", 0x484, NULL, "([TParams;)TResult;" },
    { "onPreExecute", NULL, "V", 0x4, NULL, NULL },
    { "onPostExecuteWithId:", "onPostExecute", "V", 0x4, NULL, "(TResult;)V" },
    { "onProgressUpdateWithNSObjectArray:", "onProgressUpdate", "V", 0x84, NULL, NULL },
    { "onCancelledWithId:", "onCancelled", "V", 0x4, NULL, "(TResult;)V" },
    { "onCancelled", NULL, "V", 0x4, NULL, NULL },
    { "isCancelled", NULL, "Z", 0x11, NULL, NULL },
    { "cancelWithBoolean:", "cancel", "Z", 0x11, NULL, NULL },
    { "get", NULL, "TResult;", 0x11, "Ljava.lang.InterruptedException;Ljava.util.concurrent.ExecutionException;", "()TResult;" },
    { "getWithLong:withJavaUtilConcurrentTimeUnitEnum:", "get", "TResult;", 0x11, "Ljava.lang.InterruptedException;Ljava.util.concurrent.ExecutionException;Ljava.util.concurrent.TimeoutException;", "(JLjava/util/concurrent/TimeUnit;)TResult;" },
    { "executeWithNSObjectArray:", "execute", "Lcom.example.android.displayingbitmaps.util.AsyncTask;", 0x91, NULL, NULL },
    { "executeOnExecutorWithJavaUtilConcurrentExecutor:withNSObjectArray:", "executeOnExecutor", "Lcom.example.android.displayingbitmaps.util.AsyncTask;", 0x91, NULL, NULL },
    { "executeWithJavaLangRunnable:", "execute", "V", 0x9, NULL, NULL },
    { "publishProgressWithNSObjectArray:", "publishProgress", "V", 0x90, NULL, NULL },
    { "finishWithId:", "finish", "V", 0x0, NULL, "(TResult;)V" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "LOG_TAG_", NULL, 0x1a, "Ljava.lang.String;", &ComExampleAndroidDisplayingbitmapsUtilAsyncTask_LOG_TAG_, NULL, .constantValue.asLong = 0 },
    { "CORE_POOL_SIZE", "CORE_POOL_SIZE", 0x1a, "I", NULL, NULL, .constantValue.asInt = ComExampleAndroidDisplayingbitmapsUtilAsyncTask_CORE_POOL_SIZE },
    { "MAXIMUM_POOL_SIZE", "MAXIMUM_POOL_SIZE", 0x1a, "I", NULL, NULL, .constantValue.asInt = ComExampleAndroidDisplayingbitmapsUtilAsyncTask_MAXIMUM_POOL_SIZE },
    { "KEEP_ALIVE", "KEEP_ALIVE", 0x1a, "I", NULL, NULL, .constantValue.asInt = ComExampleAndroidDisplayingbitmapsUtilAsyncTask_KEEP_ALIVE },
    { "sThreadFactory_", NULL, 0x1a, "Ljava.util.concurrent.ThreadFactory;", &ComExampleAndroidDisplayingbitmapsUtilAsyncTask_sThreadFactory_, NULL, .constantValue.asLong = 0 },
    { "sPoolWorkQueue_", NULL, 0x1a, "Ljava.util.concurrent.BlockingQueue;", &ComExampleAndroidDisplayingbitmapsUtilAsyncTask_sPoolWorkQueue_, "Ljava/util/concurrent/BlockingQueue<Ljava/lang/Runnable;>;", .constantValue.asLong = 0 },
    { "THREAD_POOL_EXECUTOR_", NULL, 0x19, "Ljava.util.concurrent.Executor;", &ComExampleAndroidDisplayingbitmapsUtilAsyncTask_THREAD_POOL_EXECUTOR_, NULL, .constantValue.asLong = 0 },
    { "SERIAL_EXECUTOR_", NULL, 0x19, "Ljava.util.concurrent.Executor;", &ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SERIAL_EXECUTOR_, NULL, .constantValue.asLong = 0 },
    { "DUAL_THREAD_EXECUTOR_", NULL, 0x19, "Ljava.util.concurrent.Executor;", &ComExampleAndroidDisplayingbitmapsUtilAsyncTask_DUAL_THREAD_EXECUTOR_, NULL, .constantValue.asLong = 0 },
    { "MESSAGE_POST_RESULT", "MESSAGE_POST_RESULT", 0x1a, "I", NULL, NULL, .constantValue.asInt = ComExampleAndroidDisplayingbitmapsUtilAsyncTask_MESSAGE_POST_RESULT },
    { "MESSAGE_POST_PROGRESS", "MESSAGE_POST_PROGRESS", 0x1a, "I", NULL, NULL, .constantValue.asInt = ComExampleAndroidDisplayingbitmapsUtilAsyncTask_MESSAGE_POST_PROGRESS },
    { "mThreadOperation_", NULL, 0x12, "Lcom.example.android.displayingbitmaps.util.AsyncTask$ThreadOperation;", NULL, NULL, .constantValue.asLong = 0 },
    { "sDefaultExecutor_", NULL, 0x4a, "Ljava.util.concurrent.Executor;", &ComExampleAndroidDisplayingbitmapsUtilAsyncTask_sDefaultExecutor_, NULL, .constantValue.asLong = 0 },
    { "mWorker_", NULL, 0x12, "Lcom.example.android.displayingbitmaps.util.AsyncTask$WorkerRunnable;", NULL, "Lcom/example/android/displayingbitmaps/util/AsyncTask$WorkerRunnable<TParams;TResult;>;", .constantValue.asLong = 0 },
    { "mFuture_", NULL, 0x12, "Ljava.util.concurrent.FutureTask;", NULL, "Ljava/util/concurrent/FutureTask<TResult;>;", .constantValue.asLong = 0 },
    { "mStatus_", NULL, 0x42, "Lcom.example.android.displayingbitmaps.util.AsyncTask$Status;", NULL, NULL, .constantValue.asLong = 0 },
    { "mCancelled_", NULL, 0x12, "Ljava.util.concurrent.atomic.AtomicBoolean;", NULL, NULL, .constantValue.asLong = 0 },
    { "mTaskInvoked_", NULL, 0x12, "Ljava.util.concurrent.atomic.AtomicBoolean;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lcom.example.android.displayingbitmaps.util.AsyncTask$SerialExecutor;", "Lcom.example.android.displayingbitmaps.util.AsyncTask$Status;", "Lcom.example.android.displayingbitmaps.util.AsyncTask$WorkerRunnable;", "Lcom.example.android.displayingbitmaps.util.AsyncTask$ThreadOperation;"};
  static const J2ObjcClassInfo _ComExampleAndroidDisplayingbitmapsUtilAsyncTask = { 2, "AsyncTask", "com.example.android.displayingbitmaps.util", NULL, 0x401, 21, methods, 18, fields, 0, NULL, 4, inner_classes, NULL, "<Params:Ljava/lang/Object;Progress:Ljava/lang/Object;Result:Ljava/lang/Object;>Ljava/lang/Object;" };
  return &_ComExampleAndroidDisplayingbitmapsUtilAsyncTask;
}

@end

void ComExampleAndroidDisplayingbitmapsUtilAsyncTask_init__() {
  ComExampleAndroidDisplayingbitmapsUtilAsyncTask_initialize();
}

void ComExampleAndroidDisplayingbitmapsUtilAsyncTask_setDefaultExecutorWithJavaUtilConcurrentExecutor_(id<JavaUtilConcurrentExecutor> exec) {
  ComExampleAndroidDisplayingbitmapsUtilAsyncTask_initialize();
  JreVolatileStrongAssign(&ComExampleAndroidDisplayingbitmapsUtilAsyncTask_sDefaultExecutor_, exec);
}

void ComExampleAndroidDisplayingbitmapsUtilAsyncTask_initWithComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation_(ComExampleAndroidDisplayingbitmapsUtilAsyncTask *self, id<ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation> accessor) {
  NSObject_init(self);
  JreVolatileStrongAssign(&self->mStatus_, JreLoadStatic(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_StatusEnum, PENDING));
  JreStrongAssignAndConsume(&self->mCancelled_, new_JavaUtilConcurrentAtomicAtomicBoolean_init());
  JreStrongAssignAndConsume(&self->mTaskInvoked_, new_JavaUtilConcurrentAtomicAtomicBoolean_init());
  JreStrongAssign(&self->mThreadOperation_, accessor);
  JreStrongAssignAndConsume(&self->mWorker_, new_ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$2_initWithComExampleAndroidDisplayingbitmapsUtilAsyncTask_(self));
  JreStrongAssignAndConsume(&self->mFuture_, new_ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$3_initWithComExampleAndroidDisplayingbitmapsUtilAsyncTask_withJavaUtilConcurrentCallable_(self, self->mWorker_));
}

void ComExampleAndroidDisplayingbitmapsUtilAsyncTask_postResultIfNotInvokedWithId_(ComExampleAndroidDisplayingbitmapsUtilAsyncTask *self, id result) {
  jboolean wasTaskInvoked = [((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(self->mTaskInvoked_)) get];
  if (!wasTaskInvoked) {
    ComExampleAndroidDisplayingbitmapsUtilAsyncTask_postResultWithId_(self, result);
  }
}

id ComExampleAndroidDisplayingbitmapsUtilAsyncTask_postResultWithId_(ComExampleAndroidDisplayingbitmapsUtilAsyncTask *self, id result) {
  [((id<ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation>) nil_chk(self->mThreadOperation_)) postResultWithComExampleAndroidDisplayingbitmapsUtilAsyncTask:self withId:result];
  return result;
}

jboolean ComExampleAndroidDisplayingbitmapsUtilAsyncTask_isCancelled(ComExampleAndroidDisplayingbitmapsUtilAsyncTask *self) {
  return [((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(self->mCancelled_)) get];
}

ComExampleAndroidDisplayingbitmapsUtilAsyncTask *ComExampleAndroidDisplayingbitmapsUtilAsyncTask_executeOnExecutorWithJavaUtilConcurrentExecutor_withNSObjectArray_(ComExampleAndroidDisplayingbitmapsUtilAsyncTask *self, id<JavaUtilConcurrentExecutor> exec, IOSObjectArray *params) {
  if (JreLoadVolatileId(&self->mStatus_) != JreLoadStatic(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_StatusEnum, PENDING)) {
    switch ([JreLoadVolatileId(&self->mStatus_) ordinal]) {
      case ComExampleAndroidDisplayingbitmapsUtilAsyncTask_Status_RUNNING:
      @throw [new_JavaLangIllegalStateException_initWithNSString_(@"Cannot execute task: the task is already running.") autorelease];
      case ComExampleAndroidDisplayingbitmapsUtilAsyncTask_Status_FINISHED:
      @throw [new_JavaLangIllegalStateException_initWithNSString_(@"Cannot execute task: the task has already been executed (a task can be executed only once)") autorelease];
    }
  }
  JreVolatileStrongAssign(&self->mStatus_, JreLoadStatic(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_StatusEnum, RUNNING));
  [self onPreExecute];
  JreStrongAssign(&((ComExampleAndroidDisplayingbitmapsUtilAsyncTask_WorkerRunnable *) nil_chk(self->mWorker_))->mParams_, params);
  [((id<JavaUtilConcurrentExecutor>) nil_chk(exec)) executeWithJavaLangRunnable:self->mFuture_];
  return self;
}

void ComExampleAndroidDisplayingbitmapsUtilAsyncTask_executeWithJavaLangRunnable_(id<JavaLangRunnable> runnable) {
  ComExampleAndroidDisplayingbitmapsUtilAsyncTask_initialize();
  [((id<JavaUtilConcurrentExecutor>) nil_chk(JreLoadVolatileId(&ComExampleAndroidDisplayingbitmapsUtilAsyncTask_sDefaultExecutor_))) executeWithJavaLangRunnable:runnable];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComExampleAndroidDisplayingbitmapsUtilAsyncTask)

@implementation ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor

- (void)executeWithJavaLangRunnable:(id<JavaLangRunnable>)r {
  @synchronized(self) {
    [((JavaUtilArrayDeque *) nil_chk(mTasks_)) offerWithId:[new_ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor_$1_initWithComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor_withJavaLangRunnable_(self, r) autorelease]];
    if (mActive_ == nil) {
      [self scheduleNext];
    }
  }
}

- (void)scheduleNext {
  @synchronized(self) {
    if ((JreStrongAssign(&mActive_, [((JavaUtilArrayDeque *) nil_chk(mTasks_)) poll])) != nil) {
      [((id<JavaUtilConcurrentExecutor>) nil_chk(JreLoadStatic(ComExampleAndroidDisplayingbitmapsUtilAsyncTask, THREAD_POOL_EXECUTOR_))) executeWithJavaLangRunnable:mActive_];
    }
  }
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(mTasks_);
  RELEASE_(mActive_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "executeWithJavaLangRunnable:", "execute", "V", 0x21, NULL, NULL },
    { "scheduleNext", NULL, "V", 0x24, NULL, NULL },
    { "init", NULL, NULL, 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "mTasks_", NULL, 0x10, "Ljava.util.ArrayDeque;", NULL, "Ljava/util/ArrayDeque<Ljava/lang/Runnable;>;", .constantValue.asLong = 0 },
    { "mActive_", NULL, 0x0, "Ljava.lang.Runnable;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor = { 2, "SerialExecutor", "com.example.android.displayingbitmaps.util", "AsyncTask", 0xa, 3, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor;
}

@end

void ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor_init(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->mTasks_, new_JavaUtilArrayDeque_init());
}

ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor *new_ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor_init() {
  ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor *self = [ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor alloc];
  ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor)

@implementation ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor_$1

- (void)run {
  @try {
    [((id<JavaLangRunnable>) nil_chk(val$r_)) run];
  }
  @finally {
    [this$0_ scheduleNext];
  }
}

- (instancetype)initWithComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor:(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor *)outer$
                                                                  withJavaLangRunnable:(id<JavaLangRunnable>)capture$0 {
  ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor_$1_initWithComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor_withJavaLangRunnable_(self, outer$, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$r_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "run", NULL, "V", 0x1, NULL, NULL },
    { "initWithComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor:withJavaLangRunnable:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lcom.example.android.displayingbitmaps.util.AsyncTask$SerialExecutor;", NULL, NULL, .constantValue.asLong = 0 },
    { "val$r_", NULL, 0x1012, "Ljava.lang.Runnable;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor", "executeWithJavaLangRunnable:" };
  static const J2ObjcClassInfo _ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor_$1 = { 2, "", "com.example.android.displayingbitmaps.util", "AsyncTask$SerialExecutor", 0x8008, 2, methods, 2, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor_$1;
}

@end

void ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor_$1_initWithComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor_withJavaLangRunnable_(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor_$1 *self, ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor *outer$, id<JavaLangRunnable> capture$0) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$r_, capture$0);
  NSObject_init(self);
}

ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor_$1 *new_ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor_$1_initWithComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor_withJavaLangRunnable_(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor *outer$, id<JavaLangRunnable> capture$0) {
  ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor_$1 *self = [ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor_$1 alloc];
  ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor_$1_initWithComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor_withJavaLangRunnable_(self, outer$, capture$0);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_SerialExecutor_$1)

J2OBJC_INITIALIZED_DEFN(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_StatusEnum)

ComExampleAndroidDisplayingbitmapsUtilAsyncTask_StatusEnum *ComExampleAndroidDisplayingbitmapsUtilAsyncTask_StatusEnum_values_[3];

@implementation ComExampleAndroidDisplayingbitmapsUtilAsyncTask_StatusEnum

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  ComExampleAndroidDisplayingbitmapsUtilAsyncTask_StatusEnum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

IOSObjectArray *ComExampleAndroidDisplayingbitmapsUtilAsyncTask_StatusEnum_values() {
  ComExampleAndroidDisplayingbitmapsUtilAsyncTask_StatusEnum_initialize();
  return [IOSObjectArray arrayWithObjects:ComExampleAndroidDisplayingbitmapsUtilAsyncTask_StatusEnum_values_ count:3 type:ComExampleAndroidDisplayingbitmapsUtilAsyncTask_StatusEnum_class_()];
}

+ (IOSObjectArray *)values {
  return ComExampleAndroidDisplayingbitmapsUtilAsyncTask_StatusEnum_values();
}

+ (ComExampleAndroidDisplayingbitmapsUtilAsyncTask_StatusEnum *)valueOfWithNSString:(NSString *)name {
  return ComExampleAndroidDisplayingbitmapsUtilAsyncTask_StatusEnum_valueOfWithNSString_(name);
}

ComExampleAndroidDisplayingbitmapsUtilAsyncTask_StatusEnum *ComExampleAndroidDisplayingbitmapsUtilAsyncTask_StatusEnum_valueOfWithNSString_(NSString *name) {
  ComExampleAndroidDisplayingbitmapsUtilAsyncTask_StatusEnum_initialize();
  for (int i = 0; i < 3; i++) {
    ComExampleAndroidDisplayingbitmapsUtilAsyncTask_StatusEnum *e = ComExampleAndroidDisplayingbitmapsUtilAsyncTask_StatusEnum_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[[JavaLangIllegalArgumentException alloc] initWithNSString:name] autorelease];
  return nil;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self retain];
}

+ (void)initialize {
  if (self == [ComExampleAndroidDisplayingbitmapsUtilAsyncTask_StatusEnum class]) {
    ComExampleAndroidDisplayingbitmapsUtilAsyncTask_StatusEnum_PENDING = new_ComExampleAndroidDisplayingbitmapsUtilAsyncTask_StatusEnum_initWithNSString_withInt_(@"PENDING", 0);
    ComExampleAndroidDisplayingbitmapsUtilAsyncTask_StatusEnum_RUNNING = new_ComExampleAndroidDisplayingbitmapsUtilAsyncTask_StatusEnum_initWithNSString_withInt_(@"RUNNING", 1);
    ComExampleAndroidDisplayingbitmapsUtilAsyncTask_StatusEnum_FINISHED = new_ComExampleAndroidDisplayingbitmapsUtilAsyncTask_StatusEnum_initWithNSString_withInt_(@"FINISHED", 2);
    J2OBJC_SET_INITIALIZED(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_StatusEnum)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcFieldInfo fields[] = {
    { "PENDING", "PENDING", 0x4019, "Lcom.example.android.displayingbitmaps.util.AsyncTask$Status;", &ComExampleAndroidDisplayingbitmapsUtilAsyncTask_StatusEnum_PENDING, NULL, .constantValue.asLong = 0 },
    { "RUNNING", "RUNNING", 0x4019, "Lcom.example.android.displayingbitmaps.util.AsyncTask$Status;", &ComExampleAndroidDisplayingbitmapsUtilAsyncTask_StatusEnum_RUNNING, NULL, .constantValue.asLong = 0 },
    { "FINISHED", "FINISHED", 0x4019, "Lcom.example.android.displayingbitmaps.util.AsyncTask$Status;", &ComExampleAndroidDisplayingbitmapsUtilAsyncTask_StatusEnum_FINISHED, NULL, .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"Lcom.example.android.displayingbitmaps.util.AsyncTask$Status;"};
  static const J2ObjcClassInfo _ComExampleAndroidDisplayingbitmapsUtilAsyncTask_StatusEnum = { 2, "Status", "com.example.android.displayingbitmaps.util", "AsyncTask", 0x4019, 0, NULL, 3, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/lang/Enum<Lcom/example/android/displayingbitmaps/util/AsyncTask$Status;>;" };
  return &_ComExampleAndroidDisplayingbitmapsUtilAsyncTask_StatusEnum;
}

@end

void ComExampleAndroidDisplayingbitmapsUtilAsyncTask_StatusEnum_initWithNSString_withInt_(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_StatusEnum *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

ComExampleAndroidDisplayingbitmapsUtilAsyncTask_StatusEnum *new_ComExampleAndroidDisplayingbitmapsUtilAsyncTask_StatusEnum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  ComExampleAndroidDisplayingbitmapsUtilAsyncTask_StatusEnum *self = [ComExampleAndroidDisplayingbitmapsUtilAsyncTask_StatusEnum alloc];
  ComExampleAndroidDisplayingbitmapsUtilAsyncTask_StatusEnum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_StatusEnum)

@implementation ComExampleAndroidDisplayingbitmapsUtilAsyncTask_WorkerRunnable

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComExampleAndroidDisplayingbitmapsUtilAsyncTask_WorkerRunnable_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(mParams_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", NULL, NULL, 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "mParams_", NULL, 0x0, "[Ljava.lang.Object;", NULL, "[TParams;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ComExampleAndroidDisplayingbitmapsUtilAsyncTask_WorkerRunnable = { 2, "WorkerRunnable", "com.example.android.displayingbitmaps.util", "AsyncTask", 0x40a, 1, methods, 1, fields, 0, NULL, 0, NULL, NULL, "<Params:Ljava/lang/Object;Result:Ljava/lang/Object;>Ljava/lang/Object;Ljava/util/concurrent/Callable<TResult;>;" };
  return &_ComExampleAndroidDisplayingbitmapsUtilAsyncTask_WorkerRunnable;
}

@end

void ComExampleAndroidDisplayingbitmapsUtilAsyncTask_WorkerRunnable_init(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_WorkerRunnable *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_WorkerRunnable)

@implementation ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "setThreadPriorityWithComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation_PriorityEnum:", "setThreadPriority", "V", 0x401, NULL, NULL },
    { "publishProgressWithComExampleAndroidDisplayingbitmapsUtilAsyncTask:withNSObjectArray:", "publishProgress", "V", 0x481, NULL, NULL },
    { "postResultWithComExampleAndroidDisplayingbitmapsUtilAsyncTask:withId:", "postResult", "V", 0x401, NULL, NULL },
  };
  static const char *inner_classes[] = {"Lcom.example.android.displayingbitmaps.util.AsyncTask$ThreadOperation$Priority;"};
  static const J2ObjcClassInfo _ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation = { 2, "ThreadOperation", "com.example.android.displayingbitmaps.util", "AsyncTask", 0x609, 3, methods, 0, NULL, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation)

J2OBJC_INITIALIZED_DEFN(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation_PriorityEnum)

ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation_PriorityEnum *ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation_PriorityEnum_values_[1];

@implementation ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation_PriorityEnum

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation_PriorityEnum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

IOSObjectArray *ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation_PriorityEnum_values() {
  ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation_PriorityEnum_initialize();
  return [IOSObjectArray arrayWithObjects:ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation_PriorityEnum_values_ count:1 type:ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation_PriorityEnum_class_()];
}

+ (IOSObjectArray *)values {
  return ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation_PriorityEnum_values();
}

+ (ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation_PriorityEnum *)valueOfWithNSString:(NSString *)name {
  return ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation_PriorityEnum_valueOfWithNSString_(name);
}

ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation_PriorityEnum *ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation_PriorityEnum_valueOfWithNSString_(NSString *name) {
  ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation_PriorityEnum_initialize();
  for (int i = 0; i < 1; i++) {
    ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation_PriorityEnum *e = ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation_PriorityEnum_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[[JavaLangIllegalArgumentException alloc] initWithNSString:name] autorelease];
  return nil;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self retain];
}

+ (void)initialize {
  if (self == [ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation_PriorityEnum class]) {
    ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation_PriorityEnum_THREAD_PRIORITY_BACKGROUND = new_ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation_PriorityEnum_initWithNSString_withInt_(@"THREAD_PRIORITY_BACKGROUND", 0);
    J2OBJC_SET_INITIALIZED(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation_PriorityEnum)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcFieldInfo fields[] = {
    { "THREAD_PRIORITY_BACKGROUND", "THREAD_PRIORITY_BACKGROUND", 0x4019, "Lcom.example.android.displayingbitmaps.util.AsyncTask$ThreadOperation$Priority;", &ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation_PriorityEnum_THREAD_PRIORITY_BACKGROUND, NULL, .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"Lcom.example.android.displayingbitmaps.util.AsyncTask$ThreadOperation$Priority;"};
  static const J2ObjcClassInfo _ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation_PriorityEnum = { 2, "Priority", "com.example.android.displayingbitmaps.util", "AsyncTask$ThreadOperation", 0x4019, 0, NULL, 1, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/lang/Enum<Lcom/example/android/displayingbitmaps/util/AsyncTask$ThreadOperation$Priority;>;" };
  return &_ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation_PriorityEnum;
}

@end

void ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation_PriorityEnum_initWithNSString_withInt_(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation_PriorityEnum *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation_PriorityEnum *new_ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation_PriorityEnum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation_PriorityEnum *self = [ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation_PriorityEnum alloc];
  ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation_PriorityEnum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation_PriorityEnum)

@implementation ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$1

- (JavaLangThread *)newThreadWithJavaLangRunnable:(id<JavaLangRunnable>)r {
  return [new_JavaLangThread_initWithJavaLangRunnable_withNSString_(r, JreStrcat("$I", @"AsyncTask #", [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(mCount_)) getAndIncrement])) autorelease];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(mCount_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "newThreadWithJavaLangRunnable:", "newThread", "Ljava.lang.Thread;", 0x1, NULL, NULL },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "mCount_", NULL, 0x12, "Ljava.util.concurrent.atomic.AtomicInteger;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$1 = { 2, "", "com.example.android.displayingbitmaps.util", "AsyncTask", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$1;
}

@end

void ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$1_init(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$1 *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->mCount_, new_JavaUtilConcurrentAtomicAtomicInteger_initWithInt_(1));
}

ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$1 *new_ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$1_init() {
  ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$1 *self = [ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$1 alloc];
  ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$1_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$1)

@implementation ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$2

- (id)call {
  [((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(this$0_->mTaskInvoked_)) setWithBoolean:true];
  [((id<ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation>) nil_chk(this$0_->mThreadOperation_)) setThreadPriorityWithComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation_PriorityEnum:JreLoadStatic(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation_PriorityEnum, THREAD_PRIORITY_BACKGROUND)];
  return ComExampleAndroidDisplayingbitmapsUtilAsyncTask_postResultWithId_(this$0_, [this$0_ doInBackgroundWithNSObjectArray:mParams_]);
}

- (instancetype)initWithComExampleAndroidDisplayingbitmapsUtilAsyncTask:(ComExampleAndroidDisplayingbitmapsUtilAsyncTask *)outer$ {
  ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$2_initWithComExampleAndroidDisplayingbitmapsUtilAsyncTask_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "call", NULL, "TResult;", 0x1, "Ljava.lang.Exception;", "()TResult;" },
    { "initWithComExampleAndroidDisplayingbitmapsUtilAsyncTask:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lcom.example.android.displayingbitmaps.util.AsyncTask;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"TParams;", "TResult;"};
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "ComExampleAndroidDisplayingbitmapsUtilAsyncTask", "initWithComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation:" };
  static const J2ObjcClassInfo _ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$2 = { 2, "", "com.example.android.displayingbitmaps.util", "AsyncTask", 0x8008, 2, methods, 1, fields, 2, superclass_type_args, 0, NULL, &enclosing_method, "Lcom/example/android/displayingbitmaps/util/AsyncTask$WorkerRunnable<TParams;TResult;>;" };
  return &_ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$2;
}

@end

void ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$2_initWithComExampleAndroidDisplayingbitmapsUtilAsyncTask_(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$2 *self, ComExampleAndroidDisplayingbitmapsUtilAsyncTask *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  ComExampleAndroidDisplayingbitmapsUtilAsyncTask_WorkerRunnable_init(self);
}

ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$2 *new_ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$2_initWithComExampleAndroidDisplayingbitmapsUtilAsyncTask_(ComExampleAndroidDisplayingbitmapsUtilAsyncTask *outer$) {
  ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$2 *self = [ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$2 alloc];
  ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$2_initWithComExampleAndroidDisplayingbitmapsUtilAsyncTask_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$2)

@implementation ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$3

- (void)done {
  @try {
    ComExampleAndroidDisplayingbitmapsUtilAsyncTask_postResultIfNotInvokedWithId_(this$0_, [self get]);
  }
  @catch (JavaLangInterruptedException *e) {
    AndroidUtilLog_wWithNSString_withJavaLangThrowable_(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_LOG_TAG_, e);
  }
  @catch (JavaUtilConcurrentExecutionException *e) {
    @throw [new_JavaLangRuntimeException_initWithNSString_withJavaLangThrowable_(@"An error occured while executing doInBackground()", [((JavaUtilConcurrentExecutionException *) nil_chk(e)) getCause]) autorelease];
  }
  @catch (JavaUtilConcurrentCancellationException *e) {
    ComExampleAndroidDisplayingbitmapsUtilAsyncTask_postResultIfNotInvokedWithId_(this$0_, nil);
  }
}

- (instancetype)initWithComExampleAndroidDisplayingbitmapsUtilAsyncTask:(ComExampleAndroidDisplayingbitmapsUtilAsyncTask *)outer$
                                         withJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)arg$0 {
  ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$3_initWithComExampleAndroidDisplayingbitmapsUtilAsyncTask_withJavaUtilConcurrentCallable_(self, outer$, arg$0);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "done", NULL, "V", 0x4, NULL, NULL },
    { "initWithComExampleAndroidDisplayingbitmapsUtilAsyncTask:withJavaUtilConcurrentCallable:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lcom.example.android.displayingbitmaps.util.AsyncTask;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"TResult;"};
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "ComExampleAndroidDisplayingbitmapsUtilAsyncTask", "initWithComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation:" };
  static const J2ObjcClassInfo _ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$3 = { 2, "", "com.example.android.displayingbitmaps.util", "AsyncTask", 0x8008, 2, methods, 1, fields, 1, superclass_type_args, 0, NULL, &enclosing_method, "Ljava/util/concurrent/FutureTask<TResult;>;" };
  return &_ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$3;
}

@end

void ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$3_initWithComExampleAndroidDisplayingbitmapsUtilAsyncTask_withJavaUtilConcurrentCallable_(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$3 *self, ComExampleAndroidDisplayingbitmapsUtilAsyncTask *outer$, id<JavaUtilConcurrentCallable> arg$0) {
  JreStrongAssign(&self->this$0_, outer$);
  JavaUtilConcurrentFutureTask_initWithJavaUtilConcurrentCallable_(self, arg$0);
}

ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$3 *new_ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$3_initWithComExampleAndroidDisplayingbitmapsUtilAsyncTask_withJavaUtilConcurrentCallable_(ComExampleAndroidDisplayingbitmapsUtilAsyncTask *outer$, id<JavaUtilConcurrentCallable> arg$0) {
  ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$3 *self = [ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$3 alloc];
  ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$3_initWithComExampleAndroidDisplayingbitmapsUtilAsyncTask_withJavaUtilConcurrentCallable_(self, outer$, arg$0);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComExampleAndroidDisplayingbitmapsUtilAsyncTask_$3)
