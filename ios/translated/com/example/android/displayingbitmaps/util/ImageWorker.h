//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/Application/src/shared/java//com/example/android/displayingbitmaps/util/ImageWorker.java
//

#ifndef _ComExampleAndroidDisplayingbitmapsUtilImageWorker_H_
#define _ComExampleAndroidDisplayingbitmapsUtilImageWorker_H_

#include "J2ObjC_header.h"
#include "com/example/android/displayingbitmaps/util/AsyncTask.h"

@class ComExampleAndroidDisplayingbitmapsUtilDiskEnvironment;
@class ComExampleAndroidDisplayingbitmapsUtilImageCache;
@class ComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams;
@class IOSObjectArray;
@class JavaLangVoid;
@protocol ComExampleAndroidDisplayingbitmapsUtilAbstractBitmap;
@protocol ComExampleAndroidDisplayingbitmapsUtilAbstractBitmapDrawable;
@protocol ComExampleAndroidDisplayingbitmapsUtilAbstractBitmapDrawableFactory;
@protocol ComExampleAndroidDisplayingbitmapsUtilAbstractBitmapFactory;
@protocol ComExampleAndroidDisplayingbitmapsUtilAbstractImageView;
@protocol ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation;
@protocol ComExampleAndroidDisplayingbitmapsUtilImageCache_ObjectHolderFactory;
@protocol ComExampleAndroidDisplayingbitmapsUtilImageWorker_OnImageLoadedListener;
@protocol ComExampleAndroidDisplayingbitmapsUtilMemoryImageCacheFactory;

@interface ComExampleAndroidDisplayingbitmapsUtilImageWorker : NSObject {
 @public
  jboolean mPauseWork_;
  id<ComExampleAndroidDisplayingbitmapsUtilAbstractBitmapFactory> mBitmapFactory_;
}

#pragma mark Public

- (void)addImageCacheWithComExampleAndroidDisplayingbitmapsUtilImageCache_ObjectHolderFactory:(id<ComExampleAndroidDisplayingbitmapsUtilImageCache_ObjectHolderFactory>)objectHolderFactory
                        withComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams:(ComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams *)cacheParams;

- (void)addImageCacheWithComExampleAndroidDisplayingbitmapsUtilImageCache_ObjectHolderFactory:(id<ComExampleAndroidDisplayingbitmapsUtilImageCache_ObjectHolderFactory>)objectHolderFactory
                                                                                 withNSString:(NSString *)diskCacheDirectoryPath;

+ (jboolean)cancelPotentialWorkWithId:(id)data
withComExampleAndroidDisplayingbitmapsUtilAbstractImageView:(id<ComExampleAndroidDisplayingbitmapsUtilAbstractImageView>)imageView;

+ (void)cancelWorkWithComExampleAndroidDisplayingbitmapsUtilAbstractImageView:(id<ComExampleAndroidDisplayingbitmapsUtilAbstractImageView>)imageView;

- (void)clearCache;

- (void)closeCache;

- (void)flushCache;

- (void)loadImageWithId:(id)data
withComExampleAndroidDisplayingbitmapsUtilAbstractImageView:(id<ComExampleAndroidDisplayingbitmapsUtilAbstractImageView>)imageView;

- (void)loadImageWithId:(id)data
withComExampleAndroidDisplayingbitmapsUtilAbstractImageView:(id<ComExampleAndroidDisplayingbitmapsUtilAbstractImageView>)imageView
withComExampleAndroidDisplayingbitmapsUtilImageWorker_OnImageLoadedListener:(id<ComExampleAndroidDisplayingbitmapsUtilImageWorker_OnImageLoadedListener>)listener;

- (void)setExitTasksEarlyWithBoolean:(jboolean)exitTasksEarly;

- (void)setImageFadeInWithBoolean:(jboolean)fadeIn;

- (void)setLoadingImageWithComExampleAndroidDisplayingbitmapsUtilAbstractBitmap:(id<ComExampleAndroidDisplayingbitmapsUtilAbstractBitmap>)bitmap;

- (void)setLoadingImageWithInt:(jint)resId;

- (void)setPauseWorkWithBoolean:(jboolean)pauseWork;

#pragma mark Protected

- (instancetype)initWithComExampleAndroidDisplayingbitmapsUtilAbstractBitmapFactory:(id<ComExampleAndroidDisplayingbitmapsUtilAbstractBitmapFactory>)bitmapFactory
            withComExampleAndroidDisplayingbitmapsUtilAbstractBitmapDrawableFactory:(id<ComExampleAndroidDisplayingbitmapsUtilAbstractBitmapDrawableFactory>)bitmapDrawableFactory
                  withComExampleAndroidDisplayingbitmapsUtilMemoryImageCacheFactory:(id<ComExampleAndroidDisplayingbitmapsUtilMemoryImageCacheFactory>)memoryImageCacheFactory
                          withComExampleAndroidDisplayingbitmapsUtilDiskEnvironment:(ComExampleAndroidDisplayingbitmapsUtilDiskEnvironment *)env
                withComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation:(id<ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation>)accessor;

- (void)clearCacheInternal;

- (void)closeCacheInternal;

- (void)flushCacheInternal;

- (ComExampleAndroidDisplayingbitmapsUtilImageCache *)getImageCache;

- (void)initDiskCacheInternal OBJC_METHOD_FAMILY_NONE;

- (id<ComExampleAndroidDisplayingbitmapsUtilAbstractBitmap>)processBitmapWithId:(id)data;

@end

J2OBJC_EMPTY_STATIC_INIT(ComExampleAndroidDisplayingbitmapsUtilImageWorker)

J2OBJC_FIELD_SETTER(ComExampleAndroidDisplayingbitmapsUtilImageWorker, mBitmapFactory_, id<ComExampleAndroidDisplayingbitmapsUtilAbstractBitmapFactory>)

FOUNDATION_EXPORT void ComExampleAndroidDisplayingbitmapsUtilImageWorker_initWithComExampleAndroidDisplayingbitmapsUtilAbstractBitmapFactory_withComExampleAndroidDisplayingbitmapsUtilAbstractBitmapDrawableFactory_withComExampleAndroidDisplayingbitmapsUtilMemoryImageCacheFactory_withComExampleAndroidDisplayingbitmapsUtilDiskEnvironment_withComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation_(ComExampleAndroidDisplayingbitmapsUtilImageWorker *self, id<ComExampleAndroidDisplayingbitmapsUtilAbstractBitmapFactory> bitmapFactory, id<ComExampleAndroidDisplayingbitmapsUtilAbstractBitmapDrawableFactory> bitmapDrawableFactory, id<ComExampleAndroidDisplayingbitmapsUtilMemoryImageCacheFactory> memoryImageCacheFactory, ComExampleAndroidDisplayingbitmapsUtilDiskEnvironment *env, id<ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation> accessor);

FOUNDATION_EXPORT void ComExampleAndroidDisplayingbitmapsUtilImageWorker_cancelWorkWithComExampleAndroidDisplayingbitmapsUtilAbstractImageView_(id<ComExampleAndroidDisplayingbitmapsUtilAbstractImageView> imageView);

FOUNDATION_EXPORT jboolean ComExampleAndroidDisplayingbitmapsUtilImageWorker_cancelPotentialWorkWithId_withComExampleAndroidDisplayingbitmapsUtilAbstractImageView_(id data, id<ComExampleAndroidDisplayingbitmapsUtilAbstractImageView> imageView);

J2OBJC_TYPE_LITERAL_HEADER(ComExampleAndroidDisplayingbitmapsUtilImageWorker)

@interface ComExampleAndroidDisplayingbitmapsUtilImageWorker_BitmapWorkerTask : ComExampleAndroidDisplayingbitmapsUtilAsyncTask

#pragma mark Public

- (instancetype)initWithComExampleAndroidDisplayingbitmapsUtilImageWorker:(ComExampleAndroidDisplayingbitmapsUtilImageWorker *)outer$
      withComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation:(id<ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation>)accessor
                                                                   withId:(id)data
              withComExampleAndroidDisplayingbitmapsUtilAbstractImageView:(id<ComExampleAndroidDisplayingbitmapsUtilAbstractImageView>)imageView;

- (instancetype)initWithComExampleAndroidDisplayingbitmapsUtilImageWorker:(ComExampleAndroidDisplayingbitmapsUtilImageWorker *)outer$
      withComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation:(id<ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation>)accessor
                                                                   withId:(id)data
              withComExampleAndroidDisplayingbitmapsUtilAbstractImageView:(id<ComExampleAndroidDisplayingbitmapsUtilAbstractImageView>)imageView
withComExampleAndroidDisplayingbitmapsUtilImageWorker_OnImageLoadedListener:(id<ComExampleAndroidDisplayingbitmapsUtilImageWorker_OnImageLoadedListener>)listener;

#pragma mark Protected

- (id<ComExampleAndroidDisplayingbitmapsUtilAbstractBitmapDrawable>)doInBackgroundWithNSObjectArray:(IOSObjectArray *)params;

- (void)onCancelledWithId:(id<ComExampleAndroidDisplayingbitmapsUtilAbstractBitmapDrawable>)value;

- (void)onPostExecuteWithId:(id<ComExampleAndroidDisplayingbitmapsUtilAbstractBitmapDrawable>)value;

@end

J2OBJC_EMPTY_STATIC_INIT(ComExampleAndroidDisplayingbitmapsUtilImageWorker_BitmapWorkerTask)

FOUNDATION_EXPORT void ComExampleAndroidDisplayingbitmapsUtilImageWorker_BitmapWorkerTask_initWithComExampleAndroidDisplayingbitmapsUtilImageWorker_withComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation_withId_withComExampleAndroidDisplayingbitmapsUtilAbstractImageView_(ComExampleAndroidDisplayingbitmapsUtilImageWorker_BitmapWorkerTask *self, ComExampleAndroidDisplayingbitmapsUtilImageWorker *outer$, id<ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation> accessor, id data, id<ComExampleAndroidDisplayingbitmapsUtilAbstractImageView> imageView);

FOUNDATION_EXPORT ComExampleAndroidDisplayingbitmapsUtilImageWorker_BitmapWorkerTask *new_ComExampleAndroidDisplayingbitmapsUtilImageWorker_BitmapWorkerTask_initWithComExampleAndroidDisplayingbitmapsUtilImageWorker_withComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation_withId_withComExampleAndroidDisplayingbitmapsUtilAbstractImageView_(ComExampleAndroidDisplayingbitmapsUtilImageWorker *outer$, id<ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation> accessor, id data, id<ComExampleAndroidDisplayingbitmapsUtilAbstractImageView> imageView) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComExampleAndroidDisplayingbitmapsUtilImageWorker_BitmapWorkerTask_initWithComExampleAndroidDisplayingbitmapsUtilImageWorker_withComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation_withId_withComExampleAndroidDisplayingbitmapsUtilAbstractImageView_withComExampleAndroidDisplayingbitmapsUtilImageWorker_OnImageLoadedListener_(ComExampleAndroidDisplayingbitmapsUtilImageWorker_BitmapWorkerTask *self, ComExampleAndroidDisplayingbitmapsUtilImageWorker *outer$, id<ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation> accessor, id data, id<ComExampleAndroidDisplayingbitmapsUtilAbstractImageView> imageView, id<ComExampleAndroidDisplayingbitmapsUtilImageWorker_OnImageLoadedListener> listener);

FOUNDATION_EXPORT ComExampleAndroidDisplayingbitmapsUtilImageWorker_BitmapWorkerTask *new_ComExampleAndroidDisplayingbitmapsUtilImageWorker_BitmapWorkerTask_initWithComExampleAndroidDisplayingbitmapsUtilImageWorker_withComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation_withId_withComExampleAndroidDisplayingbitmapsUtilAbstractImageView_withComExampleAndroidDisplayingbitmapsUtilImageWorker_OnImageLoadedListener_(ComExampleAndroidDisplayingbitmapsUtilImageWorker *outer$, id<ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation> accessor, id data, id<ComExampleAndroidDisplayingbitmapsUtilAbstractImageView> imageView, id<ComExampleAndroidDisplayingbitmapsUtilImageWorker_OnImageLoadedListener> listener) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComExampleAndroidDisplayingbitmapsUtilImageWorker_BitmapWorkerTask)

@protocol ComExampleAndroidDisplayingbitmapsUtilImageWorker_OnImageLoadedListener < NSObject, JavaObject >

- (void)onImageLoadedWithBoolean:(jboolean)success;

@end

J2OBJC_EMPTY_STATIC_INIT(ComExampleAndroidDisplayingbitmapsUtilImageWorker_OnImageLoadedListener)

J2OBJC_TYPE_LITERAL_HEADER(ComExampleAndroidDisplayingbitmapsUtilImageWorker_OnImageLoadedListener)

@interface ComExampleAndroidDisplayingbitmapsUtilImageWorker_CacheAsyncTask : ComExampleAndroidDisplayingbitmapsUtilAsyncTask

#pragma mark Protected

- (id)doInBackgroundWithNSObjectArray:(IOSObjectArray *)params;

#pragma mark Package-Private

- (instancetype)initWithComExampleAndroidDisplayingbitmapsUtilImageWorker:(ComExampleAndroidDisplayingbitmapsUtilImageWorker *)outer$
      withComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation:(id<ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation>)accessor;

@end

J2OBJC_EMPTY_STATIC_INIT(ComExampleAndroidDisplayingbitmapsUtilImageWorker_CacheAsyncTask)

FOUNDATION_EXPORT void ComExampleAndroidDisplayingbitmapsUtilImageWorker_CacheAsyncTask_initWithComExampleAndroidDisplayingbitmapsUtilImageWorker_withComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation_(ComExampleAndroidDisplayingbitmapsUtilImageWorker_CacheAsyncTask *self, ComExampleAndroidDisplayingbitmapsUtilImageWorker *outer$, id<ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation> accessor);

FOUNDATION_EXPORT ComExampleAndroidDisplayingbitmapsUtilImageWorker_CacheAsyncTask *new_ComExampleAndroidDisplayingbitmapsUtilImageWorker_CacheAsyncTask_initWithComExampleAndroidDisplayingbitmapsUtilImageWorker_withComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation_(ComExampleAndroidDisplayingbitmapsUtilImageWorker *outer$, id<ComExampleAndroidDisplayingbitmapsUtilAsyncTask_ThreadOperation> accessor) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComExampleAndroidDisplayingbitmapsUtilImageWorker_CacheAsyncTask)

#endif // _ComExampleAndroidDisplayingbitmapsUtilImageWorker_H_
