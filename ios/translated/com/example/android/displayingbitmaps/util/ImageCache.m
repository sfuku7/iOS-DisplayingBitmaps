//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/Application/src/shared/java//com/example/android/displayingbitmaps/util/ImageCache.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/example/android/common/logger/Log.h"
#include "com/example/android/displayingbitmaps/util/AbstractBitmap.h"
#include "com/example/android/displayingbitmaps/util/AbstractBitmapDrawable.h"
#include "com/example/android/displayingbitmaps/util/AbstractBitmapFactory.h"
#include "com/example/android/displayingbitmaps/util/DiskEnvironment.h"
#include "com/example/android/displayingbitmaps/util/DiskLruCache.h"
#include "com/example/android/displayingbitmaps/util/ImageCache.h"
#include "com/example/android/displayingbitmaps/util/MemoryImageCache.h"
#include "com/example/android/displayingbitmaps/util/MemoryImageCacheFactory.h"
#include "java/io/File.h"
#include "java/io/FileDescriptor.h"
#include "java/io/FileInputStream.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/io/OutputStream.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/InterruptedException.h"
#include "java/lang/Math.h"
#include "java/lang/Runtime.h"
#include "java/lang/StringBuilder.h"
#include "java/security/MessageDigest.h"
#include "java/security/NoSuchAlgorithmException.h"

#define ComExampleAndroidDisplayingbitmapsUtilImageCache_DEFAULT_MEM_CACHE_SIZE 5120
#define ComExampleAndroidDisplayingbitmapsUtilImageCache_DEFAULT_DISK_CACHE_SIZE 10485760
#define ComExampleAndroidDisplayingbitmapsUtilImageCache_DEFAULT_COMPRESS_QUALITY 70
#define ComExampleAndroidDisplayingbitmapsUtilImageCache_DISK_CACHE_INDEX 0
#define ComExampleAndroidDisplayingbitmapsUtilImageCache_DEFAULT_MEM_CACHE_ENABLED true
#define ComExampleAndroidDisplayingbitmapsUtilImageCache_DEFAULT_DISK_CACHE_ENABLED true
#define ComExampleAndroidDisplayingbitmapsUtilImageCache_DEFAULT_INIT_DISK_CACHE_ON_CREATE false

@interface ComExampleAndroidDisplayingbitmapsUtilImageCache () {
 @public
  ComExampleAndroidDisplayingbitmapsUtilDiskLruCache *mDiskLruCache_;
  ComExampleAndroidDisplayingbitmapsUtilMemoryImageCache *mMemoryCache_;
  ComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams *mCacheParams_;
  id mDiskCacheLock_;
  jboolean mDiskCacheStarting_;
  id<ComExampleAndroidDisplayingbitmapsUtilAbstractBitmapFactory> mBitmapFactory_;
}

- (instancetype)initWithComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams:(ComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams *)cacheParams
                          withComExampleAndroidDisplayingbitmapsUtilAbstractBitmapFactory:(id<ComExampleAndroidDisplayingbitmapsUtilAbstractBitmapFactory>)bitmapFactory
                        withComExampleAndroidDisplayingbitmapsUtilMemoryImageCacheFactory:(id<ComExampleAndroidDisplayingbitmapsUtilMemoryImageCacheFactory>)memoryImageCacheFactory;

- (void)init__WithComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams:(ComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams *)cacheParams
                    withComExampleAndroidDisplayingbitmapsUtilAbstractBitmapFactory:(id<ComExampleAndroidDisplayingbitmapsUtilAbstractBitmapFactory>)bitmapFactory
                  withComExampleAndroidDisplayingbitmapsUtilMemoryImageCacheFactory:(id<ComExampleAndroidDisplayingbitmapsUtilMemoryImageCacheFactory>)memoryImageCacheFactory OBJC_METHOD_FAMILY_NONE;

+ (NSString *)bytesToHexStringWithByteArray:(IOSByteArray *)bytes;

@end

J2OBJC_FIELD_SETTER(ComExampleAndroidDisplayingbitmapsUtilImageCache, mDiskLruCache_, ComExampleAndroidDisplayingbitmapsUtilDiskLruCache *)
J2OBJC_FIELD_SETTER(ComExampleAndroidDisplayingbitmapsUtilImageCache, mMemoryCache_, ComExampleAndroidDisplayingbitmapsUtilMemoryImageCache *)
J2OBJC_FIELD_SETTER(ComExampleAndroidDisplayingbitmapsUtilImageCache, mCacheParams_, ComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams *)
J2OBJC_FIELD_SETTER(ComExampleAndroidDisplayingbitmapsUtilImageCache, mDiskCacheLock_, id)
J2OBJC_FIELD_SETTER(ComExampleAndroidDisplayingbitmapsUtilImageCache, mBitmapFactory_, id<ComExampleAndroidDisplayingbitmapsUtilAbstractBitmapFactory>)

static NSString *ComExampleAndroidDisplayingbitmapsUtilImageCache_TAG_ = @"ImageCache";
J2OBJC_STATIC_FIELD_GETTER(ComExampleAndroidDisplayingbitmapsUtilImageCache, TAG_, NSString *)

J2OBJC_STATIC_FIELD_GETTER(ComExampleAndroidDisplayingbitmapsUtilImageCache, DEFAULT_MEM_CACHE_SIZE, jint)

J2OBJC_STATIC_FIELD_GETTER(ComExampleAndroidDisplayingbitmapsUtilImageCache, DEFAULT_DISK_CACHE_SIZE, jint)

static ComExampleAndroidDisplayingbitmapsUtilAbstractBitmap_CompressFormatEnum *ComExampleAndroidDisplayingbitmapsUtilImageCache_DEFAULT_COMPRESS_FORMAT_;
J2OBJC_STATIC_FIELD_GETTER(ComExampleAndroidDisplayingbitmapsUtilImageCache, DEFAULT_COMPRESS_FORMAT_, ComExampleAndroidDisplayingbitmapsUtilAbstractBitmap_CompressFormatEnum *)

J2OBJC_STATIC_FIELD_GETTER(ComExampleAndroidDisplayingbitmapsUtilImageCache, DEFAULT_COMPRESS_QUALITY, jint)

J2OBJC_STATIC_FIELD_GETTER(ComExampleAndroidDisplayingbitmapsUtilImageCache, DISK_CACHE_INDEX, jint)

J2OBJC_STATIC_FIELD_GETTER(ComExampleAndroidDisplayingbitmapsUtilImageCache, DEFAULT_MEM_CACHE_ENABLED, jboolean)

J2OBJC_STATIC_FIELD_GETTER(ComExampleAndroidDisplayingbitmapsUtilImageCache, DEFAULT_DISK_CACHE_ENABLED, jboolean)

J2OBJC_STATIC_FIELD_GETTER(ComExampleAndroidDisplayingbitmapsUtilImageCache, DEFAULT_INIT_DISK_CACHE_ON_CREATE, jboolean)

__attribute__((unused)) static void ComExampleAndroidDisplayingbitmapsUtilImageCache_initWithComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams_withComExampleAndroidDisplayingbitmapsUtilAbstractBitmapFactory_withComExampleAndroidDisplayingbitmapsUtilMemoryImageCacheFactory_(ComExampleAndroidDisplayingbitmapsUtilImageCache *self, ComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams *cacheParams, id<ComExampleAndroidDisplayingbitmapsUtilAbstractBitmapFactory> bitmapFactory, id<ComExampleAndroidDisplayingbitmapsUtilMemoryImageCacheFactory> memoryImageCacheFactory);

__attribute__((unused)) static ComExampleAndroidDisplayingbitmapsUtilImageCache *new_ComExampleAndroidDisplayingbitmapsUtilImageCache_initWithComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams_withComExampleAndroidDisplayingbitmapsUtilAbstractBitmapFactory_withComExampleAndroidDisplayingbitmapsUtilMemoryImageCacheFactory_(ComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams *cacheParams, id<ComExampleAndroidDisplayingbitmapsUtilAbstractBitmapFactory> bitmapFactory, id<ComExampleAndroidDisplayingbitmapsUtilMemoryImageCacheFactory> memoryImageCacheFactory) NS_RETURNS_RETAINED;

__attribute__((unused)) static void ComExampleAndroidDisplayingbitmapsUtilImageCache_init__WithComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams_withComExampleAndroidDisplayingbitmapsUtilAbstractBitmapFactory_withComExampleAndroidDisplayingbitmapsUtilMemoryImageCacheFactory_(ComExampleAndroidDisplayingbitmapsUtilImageCache *self, ComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams *cacheParams, id<ComExampleAndroidDisplayingbitmapsUtilAbstractBitmapFactory> bitmapFactory, id<ComExampleAndroidDisplayingbitmapsUtilMemoryImageCacheFactory> memoryImageCacheFactory);

__attribute__((unused)) static NSString *ComExampleAndroidDisplayingbitmapsUtilImageCache_bytesToHexStringWithByteArray_(IOSByteArray *bytes);

@interface ComExampleAndroidDisplayingbitmapsUtilImageCache_ObjectHolderFactory : NSObject

@end

@interface ComExampleAndroidDisplayingbitmapsUtilImageCache_ObjectHolder : NSObject

@end

J2OBJC_INITIALIZED_DEFN(ComExampleAndroidDisplayingbitmapsUtilImageCache)

@implementation ComExampleAndroidDisplayingbitmapsUtilImageCache

- (instancetype)initWithComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams:(ComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams *)cacheParams
                          withComExampleAndroidDisplayingbitmapsUtilAbstractBitmapFactory:(id<ComExampleAndroidDisplayingbitmapsUtilAbstractBitmapFactory>)bitmapFactory
                        withComExampleAndroidDisplayingbitmapsUtilMemoryImageCacheFactory:(id<ComExampleAndroidDisplayingbitmapsUtilMemoryImageCacheFactory>)memoryImageCacheFactory {
  ComExampleAndroidDisplayingbitmapsUtilImageCache_initWithComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams_withComExampleAndroidDisplayingbitmapsUtilAbstractBitmapFactory_withComExampleAndroidDisplayingbitmapsUtilMemoryImageCacheFactory_(self, cacheParams, bitmapFactory, memoryImageCacheFactory);
  return self;
}

+ (ComExampleAndroidDisplayingbitmapsUtilImageCache *)getInstanceWithComExampleAndroidDisplayingbitmapsUtilImageCache_ObjectHolderFactory:(id<ComExampleAndroidDisplayingbitmapsUtilImageCache_ObjectHolderFactory>)objectHolderFactory
                                                                        withComExampleAndroidDisplayingbitmapsUtilMemoryImageCacheFactory:(id<ComExampleAndroidDisplayingbitmapsUtilMemoryImageCacheFactory>)memoryImageCacheFactory
                                                                          withComExampleAndroidDisplayingbitmapsUtilAbstractBitmapFactory:(id<ComExampleAndroidDisplayingbitmapsUtilAbstractBitmapFactory>)bitmapFactory
                                                                    withComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams:(ComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams *)cacheParams {
  return ComExampleAndroidDisplayingbitmapsUtilImageCache_getInstanceWithComExampleAndroidDisplayingbitmapsUtilImageCache_ObjectHolderFactory_withComExampleAndroidDisplayingbitmapsUtilMemoryImageCacheFactory_withComExampleAndroidDisplayingbitmapsUtilAbstractBitmapFactory_withComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams_(objectHolderFactory, memoryImageCacheFactory, bitmapFactory, cacheParams);
}

- (void)init__WithComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams:(ComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams *)cacheParams
                    withComExampleAndroidDisplayingbitmapsUtilAbstractBitmapFactory:(id<ComExampleAndroidDisplayingbitmapsUtilAbstractBitmapFactory>)bitmapFactory
                  withComExampleAndroidDisplayingbitmapsUtilMemoryImageCacheFactory:(id<ComExampleAndroidDisplayingbitmapsUtilMemoryImageCacheFactory>)memoryImageCacheFactory {
  ComExampleAndroidDisplayingbitmapsUtilImageCache_init__WithComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams_withComExampleAndroidDisplayingbitmapsUtilAbstractBitmapFactory_withComExampleAndroidDisplayingbitmapsUtilMemoryImageCacheFactory_(self, cacheParams, bitmapFactory, memoryImageCacheFactory);
}

- (void)initDiskCache {
  @synchronized(mDiskCacheLock_) {
    if (mDiskLruCache_ == nil || [mDiskLruCache_ isClosed]) {
      JavaIoFile *diskCacheDir = ((ComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams *) nil_chk(mCacheParams_))->diskCacheDir_;
      if (mCacheParams_->diskCacheEnabled_ && diskCacheDir != nil) {
        if (![diskCacheDir exists]) {
          [diskCacheDir mkdirs];
        }
        if ([self getUsableSpaceWithJavaIoFile:diskCacheDir] > mCacheParams_->diskCacheSize_) {
          @try {
            JreStrongAssign(&mDiskLruCache_, ComExampleAndroidDisplayingbitmapsUtilDiskLruCache_openWithJavaIoFile_withInt_withInt_withLong_(diskCacheDir, 1, 1, mCacheParams_->diskCacheSize_));
            {
              ComExampleAndroidCommonLoggerLog_dWithNSString_withNSString_(ComExampleAndroidDisplayingbitmapsUtilImageCache_TAG_, @"Disk cache initialized");
            }
          }
          @catch (JavaIoIOException *e) {
            JreStrongAssign(&mCacheParams_->diskCacheDir_, nil);
            ComExampleAndroidCommonLoggerLog_eWithNSString_withNSString_(ComExampleAndroidDisplayingbitmapsUtilImageCache_TAG_, JreStrcat("$@", @"initDiskCache - ", e));
          }
        }
      }
    }
    mDiskCacheStarting_ = false;
    [nil_chk(mDiskCacheLock_) notifyAll];
  }
}

- (void)addBitmapToCacheWithNSString:(NSString *)data
withComExampleAndroidDisplayingbitmapsUtilAbstractBitmapDrawable:(id<ComExampleAndroidDisplayingbitmapsUtilAbstractBitmapDrawable>)value {
  if (data == nil || value == nil) {
    return;
  }
  if (mMemoryCache_ != nil) {
    [mMemoryCache_ putWithNSString:data withComExampleAndroidDisplayingbitmapsUtilAbstractBitmapDrawable:value];
  }
  @synchronized(mDiskCacheLock_) {
    if (mDiskLruCache_ != nil) {
      NSString *key = ComExampleAndroidDisplayingbitmapsUtilImageCache_hashKeyForDiskWithNSString_(data);
      JavaIoOutputStream *out = nil;
      @try {
        ComExampleAndroidDisplayingbitmapsUtilDiskLruCache_Snapshot *snapshot = [mDiskLruCache_ getWithNSString:key];
        if (snapshot == nil) {
          ComExampleAndroidDisplayingbitmapsUtilDiskLruCache_Editor *editor = [mDiskLruCache_ editWithNSString:key];
          if (editor != nil) {
            out = [editor newOutputStreamWithInt:ComExampleAndroidDisplayingbitmapsUtilImageCache_DISK_CACHE_INDEX];
            [((id<ComExampleAndroidDisplayingbitmapsUtilAbstractBitmap>) nil_chk([((id<ComExampleAndroidDisplayingbitmapsUtilAbstractBitmapDrawable>) nil_chk(value)) getBitmap])) compressWithComExampleAndroidDisplayingbitmapsUtilAbstractBitmap_CompressFormatEnum:((ComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams *) nil_chk(mCacheParams_))->compressFormat_ withInt:mCacheParams_->compressQuality_ withJavaIoOutputStream:out];
            [editor commit];
            [((JavaIoOutputStream *) nil_chk(out)) close];
          }
        }
        else {
          [((JavaIoInputStream *) nil_chk([snapshot getInputStreamWithInt:ComExampleAndroidDisplayingbitmapsUtilImageCache_DISK_CACHE_INDEX])) close];
        }
      }
      @catch (JavaIoIOException *e) {
        ComExampleAndroidCommonLoggerLog_eWithNSString_withNSString_(ComExampleAndroidDisplayingbitmapsUtilImageCache_TAG_, JreStrcat("$@", @"addBitmapToCache - ", e));
      }
      @catch (JavaLangException *e) {
        ComExampleAndroidCommonLoggerLog_eWithNSString_withNSString_(ComExampleAndroidDisplayingbitmapsUtilImageCache_TAG_, JreStrcat("$@", @"addBitmapToCache - ", e));
      }
      @finally {
        @try {
          if (out != nil) {
            [out close];
          }
        }
        @catch (JavaIoIOException *e) {
        }
      }
    }
  }
}

- (id<ComExampleAndroidDisplayingbitmapsUtilAbstractBitmapDrawable>)getBitmapFromMemCacheWithNSString:(NSString *)data {
  id<ComExampleAndroidDisplayingbitmapsUtilAbstractBitmapDrawable> memValue = nil;
  if (mMemoryCache_ != nil) {
    memValue = [mMemoryCache_ getWithNSString:data];
  }
  if (memValue != nil) {
    ComExampleAndroidCommonLoggerLog_dWithNSString_withNSString_(ComExampleAndroidDisplayingbitmapsUtilImageCache_TAG_, @"Memory cache hit");
  }
  return memValue;
}

- (id<ComExampleAndroidDisplayingbitmapsUtilAbstractBitmap>)getBitmapFromDiskCacheWithNSString:(NSString *)data {
  NSString *key = ComExampleAndroidDisplayingbitmapsUtilImageCache_hashKeyForDiskWithNSString_(data);
  id<ComExampleAndroidDisplayingbitmapsUtilAbstractBitmap> bitmap = nil;
  @synchronized(mDiskCacheLock_) {
    while (mDiskCacheStarting_) {
      @try {
        [nil_chk(mDiskCacheLock_) wait];
      }
      @catch (JavaLangInterruptedException *e) {
      }
    }
    if (mDiskLruCache_ != nil) {
      JavaIoInputStream *inputStream = nil;
      @try {
        ComExampleAndroidDisplayingbitmapsUtilDiskLruCache_Snapshot *snapshot = [mDiskLruCache_ getWithNSString:key];
        if (snapshot != nil) {
          {
            ComExampleAndroidCommonLoggerLog_dWithNSString_withNSString_(ComExampleAndroidDisplayingbitmapsUtilImageCache_TAG_, @"Disk cache hit");
          }
          inputStream = [snapshot getInputStreamWithInt:ComExampleAndroidDisplayingbitmapsUtilImageCache_DISK_CACHE_INDEX];
          if (inputStream != nil) {
            JavaIoFileDescriptor *fd = [((JavaIoFileInputStream *) check_class_cast(inputStream, [JavaIoFileInputStream class])) getFD];
            bitmap = [((id<ComExampleAndroidDisplayingbitmapsUtilAbstractBitmapFactory>) nil_chk(mBitmapFactory_)) decodeSampledBitmapFromDescriptorWithJavaIoFileDescriptor:fd withInt:JavaLangInteger_MAX_VALUE withInt:JavaLangInteger_MAX_VALUE withComExampleAndroidDisplayingbitmapsUtilImageCache:self];
          }
        }
      }
      @catch (JavaIoIOException *e) {
        ComExampleAndroidCommonLoggerLog_eWithNSString_withNSString_(ComExampleAndroidDisplayingbitmapsUtilImageCache_TAG_, JreStrcat("$@", @"getBitmapFromDiskCache - ", e));
      }
      @finally {
        @try {
          if (inputStream != nil) {
            [inputStream close];
          }
        }
        @catch (JavaIoIOException *e) {
        }
      }
    }
    return bitmap;
  }
}

- (id<ComExampleAndroidDisplayingbitmapsUtilAbstractBitmap>)getBitmapFromReusableSetWithId:(id)optionsPlatformDepend {
  return [((ComExampleAndroidDisplayingbitmapsUtilMemoryImageCache *) nil_chk(mMemoryCache_)) getBitmapFromReusableSetWithId:optionsPlatformDepend];
}

- (void)clearCache {
  if (mMemoryCache_ != nil) {
    [mMemoryCache_ evictAll];
    {
      ComExampleAndroidCommonLoggerLog_dWithNSString_withNSString_(ComExampleAndroidDisplayingbitmapsUtilImageCache_TAG_, @"Memory cache cleared");
    }
  }
  @synchronized(mDiskCacheLock_) {
    mDiskCacheStarting_ = true;
    if (mDiskLruCache_ != nil && ![mDiskLruCache_ isClosed]) {
      @try {
        [mDiskLruCache_ delete__];
        {
          ComExampleAndroidCommonLoggerLog_dWithNSString_withNSString_(ComExampleAndroidDisplayingbitmapsUtilImageCache_TAG_, @"Disk cache cleared");
        }
      }
      @catch (JavaIoIOException *e) {
        ComExampleAndroidCommonLoggerLog_eWithNSString_withNSString_(ComExampleAndroidDisplayingbitmapsUtilImageCache_TAG_, JreStrcat("$@", @"clearCache - ", e));
      }
      JreStrongAssign(&mDiskLruCache_, nil);
      [self initDiskCache];
    }
  }
}

- (void)flush {
  @synchronized(mDiskCacheLock_) {
    if (mDiskLruCache_ != nil) {
      @try {
        [mDiskLruCache_ flush];
        {
          ComExampleAndroidCommonLoggerLog_dWithNSString_withNSString_(ComExampleAndroidDisplayingbitmapsUtilImageCache_TAG_, @"Disk cache flushed");
        }
      }
      @catch (JavaIoIOException *e) {
        ComExampleAndroidCommonLoggerLog_eWithNSString_withNSString_(ComExampleAndroidDisplayingbitmapsUtilImageCache_TAG_, JreStrcat("$@", @"flush - ", e));
      }
    }
  }
}

- (void)close {
  @synchronized(mDiskCacheLock_) {
    if (mDiskLruCache_ != nil) {
      @try {
        if (![mDiskLruCache_ isClosed]) {
          [mDiskLruCache_ close];
          JreStrongAssign(&mDiskLruCache_, nil);
          {
            ComExampleAndroidCommonLoggerLog_dWithNSString_withNSString_(ComExampleAndroidDisplayingbitmapsUtilImageCache_TAG_, @"Disk cache closed");
          }
        }
      }
      @catch (JavaIoIOException *e) {
        ComExampleAndroidCommonLoggerLog_eWithNSString_withNSString_(ComExampleAndroidDisplayingbitmapsUtilImageCache_TAG_, JreStrcat("$@", @"close - ", e));
      }
    }
  }
}

+ (NSString *)hashKeyForDiskWithNSString:(NSString *)key {
  return ComExampleAndroidDisplayingbitmapsUtilImageCache_hashKeyForDiskWithNSString_(key);
}

+ (NSString *)bytesToHexStringWithByteArray:(IOSByteArray *)bytes {
  return ComExampleAndroidDisplayingbitmapsUtilImageCache_bytesToHexStringWithByteArray_(bytes);
}

- (jlong)getUsableSpaceWithJavaIoFile:(JavaIoFile *)path {
  return [((ComExampleAndroidDisplayingbitmapsUtilDiskEnvironment *) nil_chk(((ComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams *) nil_chk(mCacheParams_))->diskEnvironment_)) getUsableSpaceWithJavaIoFile:path];
}

- (void)dealloc {
  RELEASE_(mDiskLruCache_);
  RELEASE_(mMemoryCache_);
  RELEASE_(mCacheParams_);
  RELEASE_(mDiskCacheLock_);
  RELEASE_(mBitmapFactory_);
  [super dealloc];
}

+ (void)initialize {
  if (self == [ComExampleAndroidDisplayingbitmapsUtilImageCache class]) {
    JreStrongAssign(&ComExampleAndroidDisplayingbitmapsUtilImageCache_DEFAULT_COMPRESS_FORMAT_, JreLoadStatic(ComExampleAndroidDisplayingbitmapsUtilAbstractBitmap_CompressFormatEnum, JPEG));
    J2OBJC_SET_INITIALIZED(ComExampleAndroidDisplayingbitmapsUtilImageCache)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams:withComExampleAndroidDisplayingbitmapsUtilAbstractBitmapFactory:withComExampleAndroidDisplayingbitmapsUtilMemoryImageCacheFactory:", "ImageCache", NULL, 0x2, NULL, NULL },
    { "getInstanceWithComExampleAndroidDisplayingbitmapsUtilImageCache_ObjectHolderFactory:withComExampleAndroidDisplayingbitmapsUtilMemoryImageCacheFactory:withComExampleAndroidDisplayingbitmapsUtilAbstractBitmapFactory:withComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams:", "getInstance", "Lcom.example.android.displayingbitmaps.util.ImageCache;", 0x9, NULL, NULL },
    { "init__WithComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams:withComExampleAndroidDisplayingbitmapsUtilAbstractBitmapFactory:withComExampleAndroidDisplayingbitmapsUtilMemoryImageCacheFactory:", "init", "V", 0x2, NULL, NULL },
    { "initDiskCache", NULL, "V", 0x1, NULL, NULL },
    { "addBitmapToCacheWithNSString:withComExampleAndroidDisplayingbitmapsUtilAbstractBitmapDrawable:", "addBitmapToCache", "V", 0x1, NULL, NULL },
    { "getBitmapFromMemCacheWithNSString:", "getBitmapFromMemCache", "Lcom.example.android.displayingbitmaps.util.AbstractBitmapDrawable;", 0x1, NULL, NULL },
    { "getBitmapFromDiskCacheWithNSString:", "getBitmapFromDiskCache", "Lcom.example.android.displayingbitmaps.util.AbstractBitmap;", 0x1, NULL, NULL },
    { "getBitmapFromReusableSetWithId:", "getBitmapFromReusableSet", "Lcom.example.android.displayingbitmaps.util.AbstractBitmap;", 0x4, NULL, NULL },
    { "clearCache", NULL, "V", 0x1, NULL, NULL },
    { "flush", NULL, "V", 0x1, NULL, NULL },
    { "close", NULL, "V", 0x1, NULL, NULL },
    { "hashKeyForDiskWithNSString:", "hashKeyForDisk", "Ljava.lang.String;", 0x9, NULL, NULL },
    { "bytesToHexStringWithByteArray:", "bytesToHexString", "Ljava.lang.String;", 0xa, NULL, NULL },
    { "getUsableSpaceWithJavaIoFile:", "getUsableSpace", "J", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "TAG_", NULL, 0x1a, "Ljava.lang.String;", &ComExampleAndroidDisplayingbitmapsUtilImageCache_TAG_, NULL, .constantValue.asLong = 0 },
    { "DEFAULT_MEM_CACHE_SIZE", "DEFAULT_MEM_CACHE_SIZE", 0x1a, "I", NULL, NULL, .constantValue.asInt = ComExampleAndroidDisplayingbitmapsUtilImageCache_DEFAULT_MEM_CACHE_SIZE },
    { "DEFAULT_DISK_CACHE_SIZE", "DEFAULT_DISK_CACHE_SIZE", 0x1a, "I", NULL, NULL, .constantValue.asInt = ComExampleAndroidDisplayingbitmapsUtilImageCache_DEFAULT_DISK_CACHE_SIZE },
    { "DEFAULT_COMPRESS_FORMAT_", NULL, 0x1a, "Lcom.example.android.displayingbitmaps.util.AbstractBitmap$CompressFormat;", &ComExampleAndroidDisplayingbitmapsUtilImageCache_DEFAULT_COMPRESS_FORMAT_, NULL, .constantValue.asLong = 0 },
    { "DEFAULT_COMPRESS_QUALITY", "DEFAULT_COMPRESS_QUALITY", 0x1a, "I", NULL, NULL, .constantValue.asInt = ComExampleAndroidDisplayingbitmapsUtilImageCache_DEFAULT_COMPRESS_QUALITY },
    { "DISK_CACHE_INDEX", "DISK_CACHE_INDEX", 0x1a, "I", NULL, NULL, .constantValue.asInt = ComExampleAndroidDisplayingbitmapsUtilImageCache_DISK_CACHE_INDEX },
    { "DEFAULT_MEM_CACHE_ENABLED", "DEFAULT_MEM_CACHE_ENABLED", 0x1a, "Z", NULL, NULL, .constantValue.asBOOL = ComExampleAndroidDisplayingbitmapsUtilImageCache_DEFAULT_MEM_CACHE_ENABLED },
    { "DEFAULT_DISK_CACHE_ENABLED", "DEFAULT_DISK_CACHE_ENABLED", 0x1a, "Z", NULL, NULL, .constantValue.asBOOL = ComExampleAndroidDisplayingbitmapsUtilImageCache_DEFAULT_DISK_CACHE_ENABLED },
    { "DEFAULT_INIT_DISK_CACHE_ON_CREATE", "DEFAULT_INIT_DISK_CACHE_ON_CREATE", 0x1a, "Z", NULL, NULL, .constantValue.asBOOL = ComExampleAndroidDisplayingbitmapsUtilImageCache_DEFAULT_INIT_DISK_CACHE_ON_CREATE },
    { "mDiskLruCache_", NULL, 0x2, "Lcom.example.android.displayingbitmaps.util.DiskLruCache;", NULL, NULL, .constantValue.asLong = 0 },
    { "mMemoryCache_", NULL, 0x2, "Lcom.example.android.displayingbitmaps.util.MemoryImageCache;", NULL, NULL, .constantValue.asLong = 0 },
    { "mCacheParams_", NULL, 0x2, "Lcom.example.android.displayingbitmaps.util.ImageCache$ImageCacheParams;", NULL, NULL, .constantValue.asLong = 0 },
    { "mDiskCacheLock_", NULL, 0x12, "Ljava.lang.Object;", NULL, NULL, .constantValue.asLong = 0 },
    { "mDiskCacheStarting_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "mBitmapFactory_", NULL, 0x2, "Lcom.example.android.displayingbitmaps.util.AbstractBitmapFactory;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lcom.example.android.displayingbitmaps.util.ImageCache$ImageCacheParams;", "Lcom.example.android.displayingbitmaps.util.ImageCache$ObjectHolderFactory;", "Lcom.example.android.displayingbitmaps.util.ImageCache$ObjectHolder;"};
  static const J2ObjcClassInfo _ComExampleAndroidDisplayingbitmapsUtilImageCache = { 2, "ImageCache", "com.example.android.displayingbitmaps.util", NULL, 0x1, 14, methods, 15, fields, 0, NULL, 3, inner_classes, NULL, NULL };
  return &_ComExampleAndroidDisplayingbitmapsUtilImageCache;
}

@end

void ComExampleAndroidDisplayingbitmapsUtilImageCache_initWithComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams_withComExampleAndroidDisplayingbitmapsUtilAbstractBitmapFactory_withComExampleAndroidDisplayingbitmapsUtilMemoryImageCacheFactory_(ComExampleAndroidDisplayingbitmapsUtilImageCache *self, ComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams *cacheParams, id<ComExampleAndroidDisplayingbitmapsUtilAbstractBitmapFactory> bitmapFactory, id<ComExampleAndroidDisplayingbitmapsUtilMemoryImageCacheFactory> memoryImageCacheFactory) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->mDiskCacheLock_, new_NSObject_init());
  self->mDiskCacheStarting_ = true;
  ComExampleAndroidDisplayingbitmapsUtilImageCache_init__WithComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams_withComExampleAndroidDisplayingbitmapsUtilAbstractBitmapFactory_withComExampleAndroidDisplayingbitmapsUtilMemoryImageCacheFactory_(self, cacheParams, bitmapFactory, memoryImageCacheFactory);
}

ComExampleAndroidDisplayingbitmapsUtilImageCache *new_ComExampleAndroidDisplayingbitmapsUtilImageCache_initWithComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams_withComExampleAndroidDisplayingbitmapsUtilAbstractBitmapFactory_withComExampleAndroidDisplayingbitmapsUtilMemoryImageCacheFactory_(ComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams *cacheParams, id<ComExampleAndroidDisplayingbitmapsUtilAbstractBitmapFactory> bitmapFactory, id<ComExampleAndroidDisplayingbitmapsUtilMemoryImageCacheFactory> memoryImageCacheFactory) {
  ComExampleAndroidDisplayingbitmapsUtilImageCache *self = [ComExampleAndroidDisplayingbitmapsUtilImageCache alloc];
  ComExampleAndroidDisplayingbitmapsUtilImageCache_initWithComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams_withComExampleAndroidDisplayingbitmapsUtilAbstractBitmapFactory_withComExampleAndroidDisplayingbitmapsUtilMemoryImageCacheFactory_(self, cacheParams, bitmapFactory, memoryImageCacheFactory);
  return self;
}

ComExampleAndroidDisplayingbitmapsUtilImageCache *ComExampleAndroidDisplayingbitmapsUtilImageCache_getInstanceWithComExampleAndroidDisplayingbitmapsUtilImageCache_ObjectHolderFactory_withComExampleAndroidDisplayingbitmapsUtilMemoryImageCacheFactory_withComExampleAndroidDisplayingbitmapsUtilAbstractBitmapFactory_withComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams_(id<ComExampleAndroidDisplayingbitmapsUtilImageCache_ObjectHolderFactory> objectHolderFactory, id<ComExampleAndroidDisplayingbitmapsUtilMemoryImageCacheFactory> memoryImageCacheFactory, id<ComExampleAndroidDisplayingbitmapsUtilAbstractBitmapFactory> bitmapFactory, ComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams *cacheParams) {
  ComExampleAndroidDisplayingbitmapsUtilImageCache_initialize();
  id<ComExampleAndroidDisplayingbitmapsUtilImageCache_ObjectHolder> mObjectHolder = [((id<ComExampleAndroidDisplayingbitmapsUtilImageCache_ObjectHolderFactory>) nil_chk(objectHolderFactory)) getObjectHolderInstance];
  ComExampleAndroidDisplayingbitmapsUtilImageCache *imageCache = (ComExampleAndroidDisplayingbitmapsUtilImageCache *) check_class_cast([((id<ComExampleAndroidDisplayingbitmapsUtilImageCache_ObjectHolder>) nil_chk(mObjectHolder)) getObject], [ComExampleAndroidDisplayingbitmapsUtilImageCache class]);
  if (imageCache == nil) {
    imageCache = [new_ComExampleAndroidDisplayingbitmapsUtilImageCache_initWithComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams_withComExampleAndroidDisplayingbitmapsUtilAbstractBitmapFactory_withComExampleAndroidDisplayingbitmapsUtilMemoryImageCacheFactory_(cacheParams, bitmapFactory, memoryImageCacheFactory) autorelease];
    [mObjectHolder setObjectWithId:imageCache];
  }
  return imageCache;
}

void ComExampleAndroidDisplayingbitmapsUtilImageCache_init__WithComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams_withComExampleAndroidDisplayingbitmapsUtilAbstractBitmapFactory_withComExampleAndroidDisplayingbitmapsUtilMemoryImageCacheFactory_(ComExampleAndroidDisplayingbitmapsUtilImageCache *self, ComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams *cacheParams, id<ComExampleAndroidDisplayingbitmapsUtilAbstractBitmapFactory> bitmapFactory, id<ComExampleAndroidDisplayingbitmapsUtilMemoryImageCacheFactory> memoryImageCacheFactory) {
  JreStrongAssign(&self->mCacheParams_, cacheParams);
  JreStrongAssign(&self->mBitmapFactory_, bitmapFactory);
  if (((ComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams *) nil_chk(self->mCacheParams_))->memoryCacheEnabled_) {
    {
      ComExampleAndroidCommonLoggerLog_dWithNSString_withNSString_(ComExampleAndroidDisplayingbitmapsUtilImageCache_TAG_, JreStrcat("$IC", @"Memory cache created (size = ", self->mCacheParams_->memCacheSize_, ')'));
    }
    JreStrongAssign(&self->mMemoryCache_, [((id<ComExampleAndroidDisplayingbitmapsUtilMemoryImageCacheFactory>) nil_chk(memoryImageCacheFactory)) createMemoryImageCacheWithInt:self->mCacheParams_->memCacheSize_]);
  }
  if (((ComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams *) nil_chk(cacheParams))->initDiskCacheOnCreate_) {
    [self initDiskCache];
  }
}

NSString *ComExampleAndroidDisplayingbitmapsUtilImageCache_hashKeyForDiskWithNSString_(NSString *key) {
  ComExampleAndroidDisplayingbitmapsUtilImageCache_initialize();
  NSString *cacheKey;
  @try {
    JavaSecurityMessageDigest *mDigest = JavaSecurityMessageDigest_getInstanceWithNSString_(@"MD5");
    [((JavaSecurityMessageDigest *) nil_chk(mDigest)) updateWithByteArray:[((NSString *) nil_chk(key)) getBytes]];
    cacheKey = ComExampleAndroidDisplayingbitmapsUtilImageCache_bytesToHexStringWithByteArray_([mDigest digest]);
  }
  @catch (JavaSecurityNoSuchAlgorithmException *e) {
    cacheKey = NSString_valueOfInt_(((jint) [((NSString *) nil_chk(key)) hash]));
  }
  return cacheKey;
}

NSString *ComExampleAndroidDisplayingbitmapsUtilImageCache_bytesToHexStringWithByteArray_(IOSByteArray *bytes) {
  ComExampleAndroidDisplayingbitmapsUtilImageCache_initialize();
  JavaLangStringBuilder *sb = [new_JavaLangStringBuilder_init() autorelease];
  for (jint i = 0; i < ((IOSByteArray *) nil_chk(bytes))->size_; i++) {
    NSString *hex = JavaLangInteger_toHexStringWithInt_((jint) 0xFF & IOSByteArray_Get(bytes, i));
    if (((jint) [((NSString *) nil_chk(hex)) length]) == 1) {
      [sb appendWithChar:'0'];
    }
    [sb appendWithNSString:hex];
  }
  return [sb description];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComExampleAndroidDisplayingbitmapsUtilImageCache)

@implementation ComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams

- (instancetype)initWithComExampleAndroidDisplayingbitmapsUtilDiskEnvironment:(ComExampleAndroidDisplayingbitmapsUtilDiskEnvironment *)env
                                                                 withNSString:(NSString *)diskCacheDirectoryName {
  ComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams_initWithComExampleAndroidDisplayingbitmapsUtilDiskEnvironment_withNSString_(self, env, diskCacheDirectoryName);
  return self;
}

- (void)setMemCacheSizePercentWithFloat:(jfloat)percent {
  if (percent < 0.01f || percent > 0.8f) {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"setMemCacheSizePercent - percent must be between 0.01 and 0.8 (inclusive)") autorelease];
  }
  memCacheSize_ = JavaLangMath_roundWithFloat_(percent * [((JavaLangRuntime *) nil_chk(JavaLangRuntime_getRuntime())) maxMemory] / 1024);
}

- (void)dealloc {
  RELEASE_(diskCacheDir_);
  RELEASE_(compressFormat_);
  RELEASE_(diskEnvironment_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComExampleAndroidDisplayingbitmapsUtilDiskEnvironment:withNSString:", "ImageCacheParams", NULL, 0x1, NULL, NULL },
    { "setMemCacheSizePercentWithFloat:", "setMemCacheSizePercent", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "memCacheSize_", NULL, 0x1, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "diskCacheSize_", NULL, 0x1, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "diskCacheDir_", NULL, 0x1, "Ljava.io.File;", NULL, NULL, .constantValue.asLong = 0 },
    { "compressFormat_", NULL, 0x1, "Lcom.example.android.displayingbitmaps.util.AbstractBitmap$CompressFormat;", NULL, NULL, .constantValue.asLong = 0 },
    { "compressQuality_", NULL, 0x1, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "memoryCacheEnabled_", NULL, 0x1, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "diskCacheEnabled_", NULL, 0x1, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "initDiskCacheOnCreate_", NULL, 0x1, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "diskEnvironment_", NULL, 0x11, "Lcom.example.android.displayingbitmaps.util.DiskEnvironment;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams = { 2, "ImageCacheParams", "com.example.android.displayingbitmaps.util", "ImageCache", 0x9, 2, methods, 9, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams;
}

@end

void ComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams_initWithComExampleAndroidDisplayingbitmapsUtilDiskEnvironment_withNSString_(ComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams *self, ComExampleAndroidDisplayingbitmapsUtilDiskEnvironment *env, NSString *diskCacheDirectoryName) {
  NSObject_init(self);
  self->memCacheSize_ = ComExampleAndroidDisplayingbitmapsUtilImageCache_DEFAULT_MEM_CACHE_SIZE;
  self->diskCacheSize_ = ComExampleAndroidDisplayingbitmapsUtilImageCache_DEFAULT_DISK_CACHE_SIZE;
  JreStrongAssign(&self->compressFormat_, JreLoadStatic(ComExampleAndroidDisplayingbitmapsUtilImageCache, DEFAULT_COMPRESS_FORMAT_));
  self->compressQuality_ = ComExampleAndroidDisplayingbitmapsUtilImageCache_DEFAULT_COMPRESS_QUALITY;
  self->memoryCacheEnabled_ = ComExampleAndroidDisplayingbitmapsUtilImageCache_DEFAULT_MEM_CACHE_ENABLED;
  self->diskCacheEnabled_ = ComExampleAndroidDisplayingbitmapsUtilImageCache_DEFAULT_DISK_CACHE_ENABLED;
  self->initDiskCacheOnCreate_ = ComExampleAndroidDisplayingbitmapsUtilImageCache_DEFAULT_INIT_DISK_CACHE_ON_CREATE;
  JreStrongAssign(&self->diskCacheDir_, [((ComExampleAndroidDisplayingbitmapsUtilDiskEnvironment *) nil_chk(env)) getDiskCacheDirWithNSString:diskCacheDirectoryName]);
  JreStrongAssign(&self->diskEnvironment_, env);
}

ComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams *new_ComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams_initWithComExampleAndroidDisplayingbitmapsUtilDiskEnvironment_withNSString_(ComExampleAndroidDisplayingbitmapsUtilDiskEnvironment *env, NSString *diskCacheDirectoryName) {
  ComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams *self = [ComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams alloc];
  ComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams_initWithComExampleAndroidDisplayingbitmapsUtilDiskEnvironment_withNSString_(self, env, diskCacheDirectoryName);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComExampleAndroidDisplayingbitmapsUtilImageCache_ImageCacheParams)

@implementation ComExampleAndroidDisplayingbitmapsUtilImageCache_ObjectHolderFactory

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getObjectHolderInstance", NULL, "Lcom.example.android.displayingbitmaps.util.ImageCache$ObjectHolder;", 0x401, NULL, NULL },
  };
  static const J2ObjcClassInfo _ComExampleAndroidDisplayingbitmapsUtilImageCache_ObjectHolderFactory = { 2, "ObjectHolderFactory", "com.example.android.displayingbitmaps.util", "ImageCache", 0x609, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComExampleAndroidDisplayingbitmapsUtilImageCache_ObjectHolderFactory;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ComExampleAndroidDisplayingbitmapsUtilImageCache_ObjectHolderFactory)

@implementation ComExampleAndroidDisplayingbitmapsUtilImageCache_ObjectHolder

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getObject", NULL, "Ljava.lang.Object;", 0x401, NULL, NULL },
    { "setObjectWithId:", "setObject", "V", 0x401, NULL, NULL },
  };
  static const J2ObjcClassInfo _ComExampleAndroidDisplayingbitmapsUtilImageCache_ObjectHolder = { 2, "ObjectHolder", "com.example.android.displayingbitmaps.util", "ImageCache", 0x609, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComExampleAndroidDisplayingbitmapsUtilImageCache_ObjectHolder;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ComExampleAndroidDisplayingbitmapsUtilImageCache_ObjectHolder)
